# for conifers trees we don´t have to
ifelse(spp_LHNH == "LB", ag_GHGI + as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,],ag_GHGI),
# belowground "bg"
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "bg"))[1,]
)))
bio.info.df <- as.data.frame(cbind(
"plot_ID" = c(my.plot.id),
"CCS_no" = c(my.ccs.id),
"tree_ID" = c(my.tree.id),
"inv" = c(HBI.RG.above.1.3[,"inv"][i]),
"inv_year" = c(HBI.RG.above.1.3[,"inv_year"][i]),
"compartiment" = c(bio.df$compartiment),
"B_kg_tree" = c(as.numeric(bio.df$B_kg_tree))
) )
bio.ag.bg.kg.RG.above.1.3[[i]] <- bio.info.df
}
bio.ag.bg.kg.RG.above.1.3.df <- as.data.frame(rbindlist(bio.ag.bg.kg.RG.above.1.3))
bio.ag.bg.kg.RG.above.1.3.df[,c(1,2, 3, 5,7)] <- lapply(bio.ag.bg.kg.RG.above.1.3.df[,c(1,2, 3, 5,7)], as.numeric)
bio.ag.bg.kg.RG.above.1.3.df%>%
filter(compartiment %in% c("ag", "bg"))
bio.ag.bg.kg.RG.above.1.3.df%>%
filter(compartiment %in% c("ag", "bg")) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(B_kg_tree = sum(as.numeric(B_kg_tree))) %>%
mutate(compartiment = "total")
# 1.2.1.3. total and total aboveground biomass for RG trees height > 1.3m -------------------------------
bio.total.kg.RG.above.1.3.df <-
# calculate total biomass (aboveground + belowground) by summing up biomass in kg per tree in all compartiments
bio.ag.bg.kg.RG.above.1.3.df%>%
filter(compartiment %in% c("ag", "bg")) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(B_kg_tree = sum(as.numeric(B_kg_tree))) %>%
mutate(compartiment = "total") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "B_kg_tree")
# 1.2.2. biomass for RG trees height < 1.3m -------------------------------
# 1.2.1.1. aboveground biomass for RG trees height > 1.3m -------------------------------
# 1.2.1.1.1. GHGI aboveground biomass for RG trees height > 1.3m -------------------------------
bio.ag.kg.RG.below.1.3.df <- HBI_RG %>%
filter(H_m <= 1.3) %>%
mutate(compartiment = "ag") %>%
mutate(B_kg_tree = (GHGI_aB_Hb1.3(LH_NH, H_m))) %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "B_kg_tree")
# 1.2.3. join RG biomass for trees <1.3m and >1.3m height  ----------------
HBI_RG <- HBI_RG %>% left_join(., rbind(
bio.ag.bg.kg.RG.above.1.3.df,
bio.total.kg.RG.above.1.3.df,
bio.ag.kg.RG.below.1.3.df),
by = c("plot_ID", "CCS_no", "tree_ID", "inv", "inv_year"),
multiple = "all")
HBI_RG %>%
filter(H_m <= 1.3 & compartiment == "ag" |
H_m > 1.3 & !(comaprtiment %in% c("ag", "bg", "total")) )
HBI_RG %>%
filter(H_m <= 1.3 & compartiment == "ag" |
H_m > 1.3 & !(compartiment %in% c("ag", "bg", "total")) )
# 1.2.3. join RG biomass for trees <1.3m and >1.3m height  ----------------
HBI_RG <- HBI_RG %>% left_join(., rbind(
bio.ag.bg.kg.RG.above.1.3.df,
bio.total.kg.RG.above.1.3.df,
bio.ag.kg.RG.below.1.3.df),
by = c("plot_ID", "CCS_no", "tree_ID", "inv", "inv_year"),
multiple = "all")
HBI_RG %>%
filter(H_m <= 1.3 & compartiment == "ag" |
H_m > 1.3 & !(compartiment %in% c("ag", "bg", "total")) )
# Thuenen Institute - Bodenschutz und Waldzustand
# Analysis of the forest inventory accompanying the  national soil inventory
# stock calculations for regeneration
# ----- 0. SETUP ---------------------------------------------------------------
# ----- 0.1. packages and functions --------------------------------------------
source(paste0(getwd(), "/scripts/00_00_functions_library.R"))
# ----- 0.2. working directory -------------------------------------------------
here::here()
getwd()
out.path.BZE3 <- ("output/out_data/out_data_BZE/")
# ----- 0.3 data import --------------------------------------------------------
# regeneration
# this dataset contains the plant specific inventory data of the regenertaion inventory of the HBI (BZE2), including stand and area info
HBI_RG <- read.delim(file = here("data/input/BZE2_HBI/bejb.csv"), sep = ",", dec = ",")%>% mutate(inv_year = 2012, inv = inv_name(inv_year))
#  "bund_nr"  "pk_nr"  "lfd_nr"   "bart"  "hoehe"    "grklasse"
colnames(HBI_RG) <- c("plot_ID", "CCS_no", "tree_ID", "SP_code", "H_cm", "D_class_cm", "inv_year", "inv")
# this dataset contains the position and extend of the sampling circle satelites of the regeneration inventory of the HBI (BZE2) including stand and area info
HBI_RG_loc <- read.delim(file = here(paste0(out.path.BZE3, "HBI_RG_loc_update_1.csv")), sep = ",", dec = ",")
SP_names_com_ID_tapeS <- read.delim(file = here("output/out_data/x_bart_tapeS.csv"), sep = ",", dec = ",")
# 1. calculations ---------------------------------------------------------
# 1.1. size class to diameter ---------------------------------------------
# translate size class into diameter
HBI_RG <- HBI_RG %>%
mutate(
D_cm = sizeclass_to_d(D_class_cm),
H_m = H_cm/100) %>%
# join in species names and codes from x_bart
left_join(., SP_names_com_ID_tapeS %>%
mutate(char_code_ger_lowcase = tolower(Chr_code_ger)),
by = c("SP_code" = "char_code_ger_lowcase"))
# 1.2 biomass -------------------------------------------------------------
# 1.2.1. biomass for RG trees height > 1.3m -------------------------------
# subset those trees that have a height above 1.3m and thus a DBH which allows them to be processed in TapeS
HBI.RG.above.1.3 <- HBI_RG[HBI_RG$H_m > 1.3, ]
# 1.2.1.1. aboveground biomass for RG trees height > 1.3m -------------------------------
# create output list
bio.ag.bg.kg.RG.above.1.3 <- vector("list", length = nrow(HBI.RG.above.1.3))
for (i in 1:nrow(HBI.RG.above.1.3)) {
# i = 13
# basic tree info
# select one tree ID and plot ID for each individual tree per plot and sampling circuit
my.plot.id <- HBI.RG.above.1.3[,"plot_ID"][i]
my.ccs.id <- HBI.RG.above.1.3[,"CCS_no"][i]
my.tree.id <- HBI.RG.above.1.3[,"tree_ID"][i]
# select varibales for aboveground functions & calcualte aboveground biomass as input for Poorter
# nationla greenhousegas inventory function for trees below 1.3m
spp = unique(HBI.RG.above.1.3$Bio_SP_group[HBI.RG.above.1.3$plot_ID==my.plot.id & HBI.RG.above.1.3$tree_ID==my.tree.id & HBI.RG.above.1.3$CCS_no==my.ccs.id])
h.m = as.numeric(unique(HBI.RG.above.1.3$H_cm[HBI.RG.above.1.3$plot_ID==my.plot.id & HBI.RG.above.1.3$tree_ID==my.tree.id & HBI.RG.above.1.3$CCS_no==my.ccs.id]))/100
d.cm = as.numeric(unique(HBI.RG.above.1.3$D_cm[HBI.RG.above.1.3$plot_ID==my.plot.id & HBI.RG.above.1.3$tree_ID==my.tree.id & HBI.RG.above.1.3$CCS_no==my.ccs.id]))
ag_GHGI = as.data.frame(GHGI_aB_H1.3_DBHb10( spp, d.cm))[1,]
# poorter et al. function for aboveground biomass for trees
spp_LHNH = unique(HBI.RG.above.1.3$LH_NH[HBI.RG.above.1.3$plot_ID==my.plot.id & HBI.RG.above.1.3$tree_ID==my.tree.id & HBI.RG.above.1.3$CCS_no==my.ccs.id])
# calculate biomass per compartiment
bio.df <- as.data.frame(cbind(
"compartiment" = c("fw", "ndl", "ag", "bg"),
# sw+ fw compartiment:
# for conifers we have to deduct the leaf biomass estimated by poorter because it is included in the aboveground biomass
# for broadleafed trees we don´t have to
"B_kg_tree" = c(ifelse(spp_LHNH == "NB", ag_GHGI - as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,], ag_GHGI),
# foliage "ndl"
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,],
# abovegorund "ag":
# for broadleafed we have to add the leaf biomass estimated by poorter because it is included in the aboveground biomass
# for conifers trees we don´t have to
ifelse(spp_LHNH == "LB", ag_GHGI + as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,],ag_GHGI),
# belowground "bg"
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "bg"))[1,]
)))
bio.info.df <- as.data.frame(cbind(
"plot_ID" = c(my.plot.id),
"CCS_no" = c(my.ccs.id),
"tree_ID" = c(my.tree.id),
"inv" = c(HBI.RG.above.1.3[,"inv"][i]),
"inv_year" = c(HBI.RG.above.1.3[,"inv_year"][i]),
"compartiment" = c(bio.df$compartiment),
"B_kg_tree" = c(as.numeric(bio.df$B_kg_tree))
) )
bio.ag.bg.kg.RG.above.1.3[[i]] <- bio.info.df
}
bio.ag.bg.kg.RG.above.1.3.df <- as.data.frame(rbindlist(bio.ag.bg.kg.RG.above.1.3))
bio.ag.bg.kg.RG.above.1.3.df[,c(1,2, 3, 5,7)] <- lapply(bio.ag.bg.kg.RG.above.1.3.df[,c(1,2, 3, 5,7)], as.numeric)
# 1.2.1.3. total and total aboveground biomass for RG trees height > 1.3m -------------------------------
bio.total.kg.RG.above.1.3.df <-
# calculate total biomass (aboveground + belowground) by summing up biomass in kg per tree in all compartiments
bio.ag.bg.kg.RG.above.1.3.df%>%
filter(compartiment %in% c("ag", "bg")) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(B_kg_tree = sum(as.numeric(B_kg_tree))) %>%
mutate(compartiment = "total") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "B_kg_tree")
# 1.2.2. biomass for RG trees height < 1.3m -------------------------------
# 1.2.1.1. aboveground biomass for RG trees height > 1.3m -------------------------------
# 1.2.1.1.1. GHGI aboveground biomass for RG trees height > 1.3m -------------------------------
bio.ag.kg.RG.below.1.3.df <- HBI_RG %>%
filter(H_m <= 1.3) %>%
mutate(compartiment = "ag") %>%
mutate(B_kg_tree = (GHGI_aB_Hb1.3(LH_NH, H_m))) %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "B_kg_tree")
HBI_RG %>%
filter(H_m <= 1.3 & compartiment == "ag" |
H_m > 1.3 & !(compartiment %in% c("ag", "bg", "total")) )
HBI_RG
# 1.2.3. join RG biomass for trees <1.3m and >1.3m height  ----------------
HBI_RG <- HBI_RG %>% left_join(., rbind(
bio.ag.bg.kg.RG.above.1.3.df,
bio.total.kg.RG.above.1.3.df,
bio.ag.kg.RG.below.1.3.df),
by = c("plot_ID", "CCS_no", "tree_ID", "inv", "inv_year"),
multiple = "all")
HBI_RG
HBI_RG %>%
filter(H_m <= 1.3 & compartiment == "ag" |
H_m > 1.3 & !(compartiment %in% c("ag", "bg", "total")) )
HBI_RG %>%
filter(H_m <= 1.3 & compartiment == "ag")
HBI_RG %>%
filter(H_m <= 1.3 & compartiment == "ag" |
H_m > 1.3 & !(compartiment %in% c("ag", "bg", "total")) )
view(HBI_RG %>%
filter(H_m <= 1.3 & compartiment == "ag" |
H_m > 1.3 & !(compartiment %in% c("ag", "bg", "total")) ))
N_all_com
# 1.3 Nitrogen stock ------------------------------------------------------
# here we have to select which Nitrogen content we want to use for which compartiment
N_ag_kg_comps_df <- HBI_RG %>%
filter(H_m <= 1.3 & compartiment == "ag" |
H_m > 1.3 & !(compartiment %in% c("ag", "total"))) %>%
# calcualte nitrogen content for RG items with comppartiments
mutate(N_kg_tree = case_when(H_m > 1.3 & !(compartiment %in% c("ag", "total")) ~ N_all_com(B_kg_tree, N_SP_group, N_f_SP_group_MoMoK, N_bg_SP_group, compartiment),
H_m <= 1.3 & compartiment == "ag" ~ N_all_com(B_kg_tree, N_SP_group, N_f_SP_group_MoMoK, N_bg_SP_group, "fw"),
TRUE ~ NA))
# 1.3 Nitrogen stock ------------------------------------------------------
# here we have to select which Nitrogen content we want to use for which compartiment
N_ag_bg_kg_comps_df <- HBI_RG %>%
filter(H_m <= 1.3 & compartiment == "ag" |
H_m > 1.3 & !(compartiment %in% c("ag", "total"))) %>%
# calcualte nitrogen content for RG items with comppartiments "ndl", "fw", "bg"
mutate(N_kg_tree = case_when(H_m > 1.3 & !(compartiment %in% c("ag", "total")) ~ N_all_com(B_kg_tree, N_SP_group, N_f_SP_group_MoMoK, N_bg_SP_group, compartiment),
# small trees are treated as "fw" compartiment tho their only available compartiment is "ag" which is treated as "fw"
H_m <= 1.3 & compartiment == "ag" ~ N_all_com(B_kg_tree, N_SP_group, N_f_SP_group_MoMoK, N_bg_SP_group, "fw"),
TRUE ~ NA))
# 1.3 Nitrogen stock ------------------------------------------------------
N_ag_bg_kg_comps_df <- HBI_RG %>%
filter(H_m <= 1.3 & compartiment %in% c("ag") |
H_m > 1.3 & !(compartiment %in% c("ag", "total"))) %>%
# calcualte nitrogen content for RG items with comppartiments "ndl", "fw", "bg"
mutate(N_kg_tree = case_when(H_m > 1.3 & !(compartiment %in% c("ag", "total")) ~ N_all_com(B_kg_tree, N_SP_group, N_f_SP_group_MoMoK, N_bg_SP_group, compartiment),
# small trees are treated as "fw" compartiment tho their only available compartiment is "ag" which is treated as "fw"
H_m <= 1.3 & compartiment == "ag" ~ N_all_com(B_kg_tree, N_SP_group, N_f_SP_group_MoMoK, N_bg_SP_group, "fw"),
TRUE ~ NA))
HBI_RG %>%
filter(H_m > 1.3 & compartiment %in% c("ag", "bg")) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(N_kg_tree = sum(as.numeric(N_kg_tree))) %>%
mutate(compartiment = "total") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "N_kg_tree")
# total N_stock in kg
N_ag_bg_kg_comps_df %>%
filter(H_m > 1.3 & compartiment %in% c("ag", "bg")) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(N_kg_tree = sum(as.numeric(N_kg_tree))) %>%
mutate(compartiment = "total") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "N_kg_tree")
# total N_stock in kg
rbind(N_ag_bg_kg_comps_df %>%
# select compartiments "ndl", "fw",  and add them together
filter(H_m > 1.3 & compartiment %in% c("ag", "bg", "total")) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(N_kg_tree = sum(as.numeric(N_kg_tree))) %>%
mutate(compartiment = "total") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "N_kg_tree"),
# total N_stock in kg
N_ag_bg_kg_comps_df %>%
# select compartiments "ndl", "fw", "bg" and add them together
filter(H_m > 1.3 & !(compartiment %in% c("ag", "total"))) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(N_kg_tree = sum(as.numeric(N_kg_tree))) %>%
mutate(compartiment = "total") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "N_kg_tree"))
# total N_stock in kg
rbind(N_ag_bg_kg_comps_df %>%
# select compartiments "ndl", "fw",  and add them together
filter(H_m > 1.3 & compartiment %in% c("ag", "bg", "total")) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(N_kg_tree = sum(as.numeric(N_kg_tree))) %>%
mutate(compartiment = "ag") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "N_kg_tree"),
# total N_stock in kg
N_ag_bg_kg_comps_df %>%
# select compartiments "ndl", "fw", "bg" and add them together
filter(H_m > 1.3 & !(compartiment %in% c("ag", "total"))) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(N_kg_tree = sum(as.numeric(N_kg_tree))) %>%
mutate(compartiment = "total") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "N_kg_tree"))
# total N_stock in kg
rbind(N_ag_bg_kg_comps_df %>%
# select compartiments "ndl", "fw",  and add them together
filter(H_m > 1.3 & compartiment %in% c("ag", "bg", "total")) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(N_kg_tree = sum(as.numeric(N_kg_tree))) %>%
mutate(compartiment = "ag") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "N_kg_tree"),
# total N_stock in kg
N_ag_bg_kg_comps_df %>%
# select compartiments "ndl", "fw", "bg" and add them together
filter(H_m > 1.3 & !(compartiment %in% c("ag", "total"))) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(N_kg_tree = sum(as.numeric(N_kg_tree))) %>%
mutate(compartiment = "total") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "N_kg_tree")) %>%
arrange(plot_ID, CCS_no, tree_ID)
N_ag_bg_kg_comps_df %>%
# select compartiments "ndl", "fw", "bg" and add them together
filter(H_m > 1.3 & !(compartiment %in% c("ag", "total")))
# ----- 0.1. packages and functions --------------------------------------------
source(paste0(getwd(), "/scripts/00_00_functions_library.R"))
# ----- 0.2. working directory -------------------------------------------------
here::here()
getwd()
out.path.BZE3 <- ("output/out_data/out_data_BZE/")
# ----- 0.3 data import --------------------------------------------------------
# regeneration
# this dataset contains the plant specific inventory data of the regenertaion inventory of the HBI (BZE2), including stand and area info
HBI_RG <- read.delim(file = here("data/input/BZE2_HBI/bejb.csv"), sep = ",", dec = ",")%>% mutate(inv_year = 2012, inv = inv_name(inv_year))
#  "bund_nr"  "pk_nr"  "lfd_nr"   "bart"  "hoehe"    "grklasse"
colnames(HBI_RG) <- c("plot_ID", "CCS_no", "tree_ID", "SP_code", "H_cm", "D_class_cm", "inv_year", "inv")
# this dataset contains the position and extend of the sampling circle satelites of the regeneration inventory of the HBI (BZE2) including stand and area info
HBI_RG_loc <- read.delim(file = here(paste0(out.path.BZE3, "HBI_RG_loc_update_1.csv")), sep = ",", dec = ",")
SP_names_com_ID_tapeS <- read.delim(file = here("output/out_data/x_bart_tapeS.csv"), sep = ",", dec = ",")
# 1.1. size class to diameter ---------------------------------------------
# translate size class into diameter
HBI_RG <- HBI_RG %>%
mutate(
D_cm = sizeclass_to_d(D_class_cm),
H_m = H_cm/100) %>%
# join in species names and codes from x_bart
left_join(., SP_names_com_ID_tapeS %>%
mutate(char_code_ger_lowcase = tolower(Chr_code_ger)),
by = c("SP_code" = "char_code_ger_lowcase"))
# 1.2 biomass -------------------------------------------------------------
# 1.2.1. biomass for RG trees height > 1.3m -------------------------------
# subset those trees that have a height above 1.3m and thus a DBH which allows them to be processed in TapeS
HBI.RG.above.1.3 <- HBI_RG[HBI_RG$H_m > 1.3, ]
# 1.2.1.1. aboveground biomass for RG trees height > 1.3m -------------------------------
# create output list
bio.ag.bg.kg.RG.above.1.3 <- vector("list", length = nrow(HBI.RG.above.1.3))
for (i in 1:nrow(HBI.RG.above.1.3)) {
# i = 13
# basic tree info
# select one tree ID and plot ID for each individual tree per plot and sampling circuit
my.plot.id <- HBI.RG.above.1.3[,"plot_ID"][i]
my.ccs.id <- HBI.RG.above.1.3[,"CCS_no"][i]
my.tree.id <- HBI.RG.above.1.3[,"tree_ID"][i]
# select varibales for aboveground functions & calcualte aboveground biomass as input for Poorter
# nationla greenhousegas inventory function for trees below 1.3m
spp = unique(HBI.RG.above.1.3$Bio_SP_group[HBI.RG.above.1.3$plot_ID==my.plot.id & HBI.RG.above.1.3$tree_ID==my.tree.id & HBI.RG.above.1.3$CCS_no==my.ccs.id])
h.m = as.numeric(unique(HBI.RG.above.1.3$H_cm[HBI.RG.above.1.3$plot_ID==my.plot.id & HBI.RG.above.1.3$tree_ID==my.tree.id & HBI.RG.above.1.3$CCS_no==my.ccs.id]))/100
d.cm = as.numeric(unique(HBI.RG.above.1.3$D_cm[HBI.RG.above.1.3$plot_ID==my.plot.id & HBI.RG.above.1.3$tree_ID==my.tree.id & HBI.RG.above.1.3$CCS_no==my.ccs.id]))
ag_GHGI = as.data.frame(GHGI_aB_H1.3_DBHb10( spp, d.cm))[1,]
# poorter et al. function for aboveground biomass for trees
spp_LHNH = unique(HBI.RG.above.1.3$LH_NH[HBI.RG.above.1.3$plot_ID==my.plot.id & HBI.RG.above.1.3$tree_ID==my.tree.id & HBI.RG.above.1.3$CCS_no==my.ccs.id])
# calculate biomass per compartiment
bio.df <- as.data.frame(cbind(
"compartiment" = c("fwb", "ndl", "ag", "bg"),
# sw+ fwb compartiment:
# for conifers we have to deduct the leaf biomass estimated by poorter because it is included in the aboveground biomass
# for broadleafed trees we don´t have to
"B_kg_tree" = c(ifelse(spp_LHNH == "NB", ag_GHGI - as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,], ag_GHGI),
# foliage "ndl"
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,],
# abovegorund "ag":
# for broadleafed we have to add the leaf biomass estimated by poorter because it is included in the aboveground biomass
# for conifers trees we don´t have to
ifelse(spp_LHNH == "LB", ag_GHGI + as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,],ag_GHGI),
# belowground "bg"
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "bg"))[1,]
)))
bio.info.df <- as.data.frame(cbind(
"plot_ID" = c(my.plot.id),
"CCS_no" = c(my.ccs.id),
"tree_ID" = c(my.tree.id),
"inv" = c(HBI.RG.above.1.3[,"inv"][i]),
"inv_year" = c(HBI.RG.above.1.3[,"inv_year"][i]),
"compartiment" = c(bio.df$compartiment),
"B_kg_tree" = c(as.numeric(bio.df$B_kg_tree))
) )
bio.ag.bg.kg.RG.above.1.3[[i]] <- bio.info.df
}
bio.ag.bg.kg.RG.above.1.3.df <- as.data.frame(rbindlist(bio.ag.bg.kg.RG.above.1.3))
bio.ag.bg.kg.RG.above.1.3.df[,c(1,2, 3, 5,7)] <- lapply(bio.ag.bg.kg.RG.above.1.3.df[,c(1,2, 3, 5,7)], as.numeric)
# 1.2.1.3. total and total aboveground biomass for RG trees height > 1.3m -------------------------------
bio.total.kg.RG.above.1.3.df <-
# calculate total biomass (aboveground + belowground) by summing up biomass in kg per tree in all compartiments
bio.ag.bg.kg.RG.above.1.3.df%>%
filter(compartiment %in% c("ag", "bg")) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(B_kg_tree = sum(as.numeric(B_kg_tree))) %>%
mutate(compartiment = "total") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "B_kg_tree")
# 1.2.2. biomass for RG trees height < 1.3m -------------------------------
# 1.2.1.1. aboveground biomass for RG trees height > 1.3m -------------------------------
# 1.2.1.1.1. GHGI aboveground biomass for RG trees height > 1.3m -------------------------------
bio.ag.kg.RG.below.1.3.df <- HBI_RG %>%
filter(H_m <= 1.3) %>%
mutate(compartiment = "ag") %>%
mutate(B_kg_tree = (GHGI_aB_Hb1.3(LH_NH, H_m))) %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "B_kg_tree")
# 1.2.3. join RG biomass for trees <1.3m and >1.3m height  ----------------
HBI_RG <- HBI_RG %>% left_join(., rbind(
bio.ag.bg.kg.RG.above.1.3.df,
bio.total.kg.RG.above.1.3.df,
bio.ag.kg.RG.below.1.3.df),
by = c("plot_ID", "CCS_no", "tree_ID", "inv", "inv_year"),
multiple = "all")
# 1.3 Nitrogen stock ------------------------------------------------------
# 1.3.1. Nitrogen stock for aboveground  & belowgrowground ---------------------------------
N_ag_bg_kg_comps_df <- HBI_RG %>%
filter(H_m <= 1.3 & compartiment %in% c("ag") |
H_m > 1.3 & !(compartiment %in% c("ag", "total"))) %>%
# calcualte nitrogen content for RG items with comppartiments "ndl", "fwb", "bg"
mutate(N_kg_tree = case_when(H_m > 1.3 & !(compartiment %in% c("ag", "total")) ~ N_all_com(B_kg_tree, N_SP_group, N_f_SP_group_MoMoK, N_bg_SP_group, compartiment),
# small trees are treated as "fwb" compartiment tho their only available compartiment is "ag" which is treated as "fwb"
H_m <= 1.3 & compartiment == "ag" ~ N_all_com(B_kg_tree, N_SP_group, N_f_SP_group_MoMoK, N_bg_SP_group, "fwb"),
TRUE ~ NA))
N_ag_bg_kg_comps_df
# ----- 1.12. Nitrogen stock  --------------------------------------------
# nitrogen stock for woody compartiments
N_all_com <- function(B, N_spec_w_rumpf, N_spec_f_BZE, N_spec_bg_Jacobsen, comp.trees){
n_con_w <- N_con_w  %>%  filter(compartiment != "ndl") %>% unite("SP_com", SP_BWI:compartiment, remove = FALSE)%>% dplyr::pull(N_con, SP_com);
n_con_f <- N_con_f %>% dplyr::pull(N_con, N_f_SP_group_MoMoK)
# this function may have to be be adapted to the new dataset of the NSI which provides accurate N cocntents for all species and foliage
# proably I will also have to assign new species groups to acces the foliage dataset correctly
n_con_bg <- c(EI = 3.71, BU = 3.03, FI = 4.14, KI = 1.77, KIN = 1.76, BI = 3.7, LA = 2.8)/1000;# divide concentration in mg per g by 1000 to get concentration in percent/ decimal number of percent
# unite the compartiment and species to select the correct nitrogen content
SP_compart_Rumpf <- paste0(N_spec_w_rumpf, "_", comp.trees);
# calculate nitrogen content in the aboveground and belowground compartiments but without sums (total or total aboveground N)
N <- case_when(
comp.trees == "ndl" ~ 0, # as.numeric(B)*as.numeric(n_con_f[N_spec_f_BZE]), # accordint to the BZE we don´t have to deliver this compartiments nitrogen stock so we wont
comp.trees == "bg" ~ as.numeric(B)*as.numeric(n_con_bg[N_spec_bg_Jacobsen]),
!(comp.trees %in% ("ag, total, ndl, bg")) ~ as.numeric(B)*as.numeric(n_con_w[SP_compart_Rumpf]),
TRUE ~ NA)
return(N)
}
# 1.3 Nitrogen stock ------------------------------------------------------
# 1.3.1. Nitrogen stock for aboveground  & belowgrowground ---------------------------------
N_ag_bg_kg_comps_df <- HBI_RG %>%
filter(H_m <= 1.3 & compartiment %in% c("ag") |
H_m > 1.3 & !(compartiment %in% c("ag", "total"))) %>%
# calcualte nitrogen content for RG items with comppartiments "ndl", "fwb", "bg"
mutate(N_kg_tree = case_when(H_m > 1.3 & !(compartiment %in% c("ag", "total")) ~ N_all_com(B_kg_tree, N_SP_group, N_f_SP_group_MoMoK, N_bg_SP_group, compartiment),
# small trees are treated as "fwb" compartiment tho their only available compartiment is "ag" which is treated as "fwb"
H_m <= 1.3 & compartiment == "ag" ~ N_all_com(B_kg_tree, N_SP_group, N_f_SP_group_MoMoK, N_bg_SP_group, "fwb"),
TRUE ~ NA))
N_ag_bg_kg_comps_df
# 1.3.1. total Nitrogen stock ---------------------------------------------------------------
N_total_kg_df <-
# total N_stock in kg
rbind(N_ag_bg_kg_comps_df %>%
# select compartiments "ndl", "fwb",  and add them together
filter(H_m > 1.3 & compartiment %in% c("ag", "bg", "total")) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(N_kg_tree = sum(as.numeric(N_kg_tree))) %>%
mutate(compartiment = "ag") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "N_kg_tree"),
# total N_stock in kg
N_ag_bg_kg_comps_df %>%
# select compartiments "ndl", "fwb", "bg" and add them together
filter(H_m > 1.3 & !(compartiment %in% c("ag", "total"))) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(N_kg_tree = sum(as.numeric(N_kg_tree))) %>%
mutate(compartiment = "total") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "N_kg_tree")) %>%
arrange(plot_ID, CCS_no, tree_ID)
N_total_kg_df
HBI_RG %>% left_join(., rbind(
N_ag_bg_kg_comps_df,
N_total_kg_df),
by = c("plot_ID", "CCS_no", "tree_ID", "inv", "inv_year", "compartiment"),
multiple = "all")
N_ag_bg_kg_comps_df
colnames(N_ag_bg_kg_comps_df)
# 1.3 Nitrogen stock ------------------------------------------------------
# 1.3.1. Nitrogen stock for aboveground  & belowgrowground ---------------------------------
N_ag_bg_kg_comps_df <- HBI_RG %>%
filter(H_m <= 1.3 & compartiment %in% c("ag") |
H_m > 1.3 & !(compartiment %in% c("ag", "total"))) %>%
# calcualte nitrogen content for RG items with comppartiments "ndl", "fwb", "bg"
mutate(N_kg_tree = case_when(H_m > 1.3 & !(compartiment %in% c("ag", "total")) ~ N_all_com(B_kg_tree, N_SP_group, N_f_SP_group_MoMoK, N_bg_SP_group, compartiment),
# small trees are treated as "fwb" compartiment tho their only available compartiment is "ag" which is treated as "fwb"
H_m <= 1.3 & compartiment == "ag" ~ N_all_com(B_kg_tree, N_SP_group, N_f_SP_group_MoMoK, N_bg_SP_group, "fwb"),
TRUE ~ NA)) %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "N_kg_tree")
# 1.3.2. total Nitrogen stock ---------------------------------------------------------------
N_total_kg_df <-
# total N_stock in kg
rbind(N_ag_bg_kg_comps_df %>%
# select compartiments "ndl", "fwb",  and add them together
filter(H_m > 1.3 & compartiment %in% c("ag", "bg", "total")) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(N_kg_tree = sum(as.numeric(N_kg_tree))) %>%
mutate(compartiment = "ag") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "N_kg_tree"),
# total N_stock in kg
N_ag_bg_kg_comps_df %>%
# select compartiments "ndl", "fwb", "bg" and add them together
filter(H_m > 1.3 & !(compartiment %in% c("ag", "total"))) %>%
group_by(plot_ID, CCS_no, tree_ID, inv, inv_year) %>%
summarize(N_kg_tree = sum(as.numeric(N_kg_tree))) %>%
mutate(compartiment = "total") %>%
select("plot_ID","CCS_no", "tree_ID", "inv",
"inv_year", "compartiment", "N_kg_tree")) %>%
arrange(plot_ID, CCS_no, tree_ID)
# 1.3.3. join RG nitrogen stock for trees <1.3m and >1.3m height  ----------------
HBI_RG <- HBI_RG %>% left_join(., rbind(
N_ag_bg_kg_comps_df,
N_total_kg_df),
by = c("plot_ID", "CCS_no", "tree_ID", "inv", "inv_year", "compartiment"),
multiple = "all")
HBI_RG
HBI_RG %>% mutate(C_kg_tree = B_kg_tree*0.5)
# 1.4. Carbon stock -------------------------------------------------------
HBI_RG <- HBI_RG %>% mutate(C_kg_tree = B_kg_tree*0.5)
# 2. data export ----------------------------------------------------------
RG_update_2 <- HBI_RG
# 2. data export ----------------------------------------------------------
RG_update_2 <- HBI_RG
# HBI dataset including estimated heights (use write.csv2 to make ";" as separator between columns)
write.csv2(RG_update_2, paste0(out.path.BZE3, paste(unique(RG_update_2$inv)[1], "RG_update_2", sep = "_"), ".csv"))

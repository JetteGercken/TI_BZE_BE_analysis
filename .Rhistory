"B_kg_tree" = c(as.numeric(B_kg_tree$B_kg_tree))
)
)
bio.ag.kg.RG.below.1[[i]] <- bio.info.df
}
bio.ag.kg.RG.below.1.df <- as.data.frame(rbindlist(bio.ag.kg.RG.below.1))
(2/3)-4
(2-4)/3
2
(2-4/3)/3
c <- c(NH = -0.070, LH = -0.097);
b <- c(NH = 1.236, LH = 1.071);
a <- c(NH = -0.0186, LH = 0.01794);
bg1 = (-b + sqrt((b^2)-4*a*c))/2*a
bg1
bg2 = (-b - sqrt((b^2)-4*a*c))/2*a
bg2
bg3 = sqrt(((y-c)/a)+ ((b/a)/2)^2)+ (b/a)/2
y = 1
bg3 = sqrt(((y-c)/a)+ ((b/a)/2)^2)+ (b/a)/2
bg3
Poorter_rg_RSR_RLR <- function(ag, spec){ # instead of the species I have to put NH_LH here
# equation to transform aboveground into belowground biomass : stem:root-ratio
# quadratische ergänzung der Funktion: stem = a + b1*root + b2*root^2
# sten = b2*root^2 + b1*root + a
# stem = a*root^2 + b*root + c
# https://www.mathepanik.de/Klassen/Klasse_10/Lektion_Kl_10_L_parabeln_gleichung_loesen.php
c <- c(NH = -0.070, LH = -0.097);   # a
b <- c(NH = 1.236, LH = 1.071);     # b1
a <- c(NH = -0.0186, LH = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
ag_g <- log10(ag*1000)
# implement trasformed funtion
log.10.bg_bio = sqrt(((ag_g-c)/a)+ (((b/a)/2)^2))+ (b/a)/2
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
bg_bio_kg <- (10^log.10.bg_bio)/1000;
# equation to transform belowground into foliage biomass : leaf:root-ratio
bg_g <- log10(bg_bio_kg*1000);             # 10-log of belowground biomass in g (*1000)
a1 <- c(NH = -0.070, LH = -0.097);
b1 <- c(NH = 1.236, LH = 1.071);
b2 <- c(NH = -0.0186, LH = 0.01794);
log.10.f_bio <- a1[spec]+ b1[spec]* bg_g+ b2[spec]*(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
f_bio_kg <- (10^log.10.f_bio)/1000;
switch(compartiment,
"bg" = bg_bio_kg,
"foliage" = f_bio_kg)
}
Poorter_rg_RSR_RLR <- function(ag, spec, compartiment){ # instead of the species I have to put NH_LH here
# equation to transform aboveground into belowground biomass : stem:root-ratio
# quadratische ergänzung der Funktion: stem = a + b1*root + b2*root^2
# sten = b2*root^2 + b1*root + a
# stem = a*root^2 + b*root + c
# https://www.mathepanik.de/Klassen/Klasse_10/Lektion_Kl_10_L_parabeln_gleichung_loesen.php
c <- c(NH = -0.070, LH = -0.097);   # a
b <- c(NH = 1.236, LH = 1.071);     # b1
a <- c(NH = -0.0186, LH = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
ag_g <- log10(ag*1000)
# implement trasformed funtion
log.10.bg_bio = sqrt(((ag_g-c)/a)+ (((b/a)/2)^2))+ (b/a)/2
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
bg_bio_kg <- (10^log.10.bg_bio)/1000;
# equation to transform belowground into foliage biomass : leaf:root-ratio
bg_g <- log10(bg_bio_kg*1000);             # 10-log of belowground biomass in g (*1000)
a1 <- c(NH = -0.070, LH = -0.097);
b1 <- c(NH = 1.236, LH = 1.071);
b2 <- c(NH = -0.0186, LH = 0.01794);
log.10.f_bio <- a1[spec]+ b1[spec]* bg_g+ b2[spec]*(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
f_bio_kg <- (10^log.10.f_bio)/1000;
switch(compartiment,
"bg" = bg_bio_kg,
"foliage" = f_bio_kg)
}
Poorter_rg_RSR_RLR <- function(ag, spec, compartiment){ # instead of the species I have to put NH_LH here
# equation to transform aboveground into belowground biomass : stem:root-ratio
# quadratische ergänzung der Funktion: stem = a + b1*root + b2*root^2
# sten = b2*root^2 + b1*root + a
# stem = a*root^2 + b*root + c
# https://www.mathepanik.de/Klassen/Klasse_10/Lektion_Kl_10_L_parabeln_gleichung_loesen.php
c <- c(NH = -0.070, LH = -0.097);   # a
b <- c(NH = 1.236, LH = 1.071);     # b1
a <- c(NH = -0.0186, LH = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
ag_g <- log10(ag*1000)
# implement trasformed funtion
log.10.bg_bio = sqrt(((ag_g-c)/a)+ (((b/a)/2)^2))+ (b/a)/2
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
bg_bio_kg <- (10^log.10.bg_bio)/1000;
# equation to transform belowground into foliage biomass : leaf:root-ratio
bg_g <- log10(bg_bio_kg*1000);             # 10-log of belowground biomass in g (*1000)
a1 <- c(NH = -0.070, LH = -0.097);
b1 <- c(NH = 1.236, LH = 1.071);
b2 <- c(NH = -0.0186, LH = 0.01794);
log.10.f_bio <- a1[spec]+ b1[spec]* bg_g+ b2[spec]*(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
f_bio_kg <- (10^log.10.f_bio)/1000;
switch(compartiment,
"bg" = bg_bio_kg,
"foliage" = f_bio_kg)
}
HBI.RG.below.1 %>%
mutate(ag_GHGI_kg = GHGI_aB_Hb1.3(LH_NH, H_cm),
bg_poorter_kg= Poorter_rg_RSR_RLR(ag_GHGI_kg, LH_NH, compartiment = "bg"))
Poorter_rg_RSR_RLR <- function(ag, spec, compartiment){ # instead of the species I have to put NH_LH here
# equation to transform aboveground into belowground biomass : stem:root-ratio
# quadratische ergänzung der Funktion: stem = a + b1*root + b2*root^2
# sten = b2*root^2 + b1*root + a
# stem = a*root^2 + b*root + c
# https://www.mathepanik.de/Klassen/Klasse_10/Lektion_Kl_10_L_parabeln_gleichung_loesen.php
c <- c(NH = -0.070, LH = -0.097);   # a
b <- c(NH = 1.236, LH = 1.071);     # b1
a <- c(NH = -0.0186, LH = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
ag_g <- log10(ag*1000)
# implement trasformed funtion
log.10.bg_bio = sqrt(((ag_g-c[spec])/a[spec])+ (((b[spec]/a[spec])/2)^2))+ (b[spec]/a[spec])/2
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
bg_bio_kg <- (10^log.10.bg_bio)/1000;
# equation to transform belowground into foliage biomass : leaf:root-ratio
bg_g <- log10(bg_bio_kg*1000);             # 10-log of belowground biomass in g (*1000)
a1 <- c(NH = -0.070, LH = -0.097);
b1 <- c(NH = 1.236, LH = 1.071);
b2 <- c(NH = -0.0186, LH = 0.01794);
log.10.f_bio <- a1[spec]+ b1[spec]* bg_g+ b2[spec]*(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
f_bio_kg <- (10^log.10.f_bio)/1000;
switch(compartiment,
"bg" = bg_bio_kg,
"foliage" = f_bio_kg)
}
HBI.RG.below.1 %>%
mutate(ag_GHGI_kg = GHGI_aB_Hb1.3(LH_NH, H_cm),
bg_poorter_kg= Poorter_rg_RSR_RLR(ag_GHGI_kg, LH_NH, compartiment = "bg"))
HBI.RG.below.1 %>%
mutate(ag_GHGI_kg = GHGI_aB_Hb1.3(LH_NH, H_cm/100),
bg_poorter_kg= Poorter_rg_RSR_RLR(ag_GHGI_kg, LH_NH, compartiment = "bg"))
Poorter_rg_RSR_RLR(1, LH, compartiment = "bg")
Poorter_rg_RSR_RLR(1, "LB", compartiment = "bg")
Poorter_rg_RSR_RLR(1, "LB", compartiment = "foliage")
Poorter_rg_RSR_RLR(1, "LB", compartiment = "f")
c <- c(NH = -0.070, LH = -0.097);   # a
b <- c(NH = 1.236, LH = 1.071);     # b1
a <- c(NH = -0.0186, LH = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
ag = 1
ag_g <- log10(ag*1000)
ag_g
# implement trasformed funtion
log.10.bg_bio = sqrt(((ag_g-c[spec])/a[spec])+ (((b[spec]/a[spec])/2)^2))+ (b[spec]/a[spec])/2
# implement trasformed funtion
log.10.bg_bio = sqrt(((ag_g-c[NH])/a[NH])+ (((b[NH]/a[NH])/2)^2))+ (b[NH]/a[NH])/2
# implement trasformed funtion
log.10.bg_bio = sqrt(((ag_g-c)/a)+ (((b/a)/2)^2))+ (b/a)/2
log.10.bg_bio
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
bg_bio_kg <- (10^log.10.bg_bio)/1000;
bg_bio_kg
# 10-log of belowground biomass in g (*1000)
ag = 0.14110440
ag_g <- log10(ag*1000)
# implement trasformed funtion
log.10.bg_bio = sqrt(((ag_g-c)/a)+ (((b/a)/2)^2))+ (b/a)/2
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
bg_bio_kg <- (10^log.10.bg_bio)/1000;
bg_bio_kg
Poorter_rg_RSR_RLR(0.14110440, "NH", compartiment = "bg")
Poorter_rg_RSR_RLR
HBI.RG.below.1 %>%
mutate(ag_GHGI_kg = GHGI_aB_Hb1.3(LH_NH, H_cm/100),
bg_poorter_kg= Poorter_rg_RSR_RLR(ag_GHGI_kg, LH_NH, compartiment = "bg"))
HBI.RG.below.1 %>%
mutate(ag_GHGI_kg = GHGI_aB_Hb1.3(LH_NH, H_cm/100),
bg_poorter_kg= Poorter_rg_RSR_RLR(as.numeric(ag_GHGI_kg), LH_NH, compartiment = "bg"))
LH_NH
HBI.RG.below.1$LH_NH
Poorter_rg_RSR_RLR <- function(ag, spec, compartiment){ # instead of the species I have to put NH_LH here
# equation to transform aboveground into belowground biomass : stem:root-ratio
# quadratische ergänzung der Funktion: stem = a + b1*root + b2*root^2
# sten = b2*root^2 + b1*root + a
# stem = a*root^2 + b*root + c
# https://www.mathepanik.de/Klassen/Klasse_10/Lektion_Kl_10_L_parabeln_gleichung_loesen.php
c <- c(NB = -0.070, LB = -0.097);   # a
b <- c(NB = 1.236, LB = 1.071);     # b1
a <- c(NB = -0.0186, LB = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
ag_g <- log10(ag*1000)
# implement trasformed funtion
log.10.bg_bio = sqrt(((ag_g-c[spec])/a[spec])+ (((b[spec]/a[spec])/2)^2))+ (b[spec]/a[spec])/2
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
bg_bio_kg <- (10^log.10.bg_bio)/1000;
# equation to transform belowground into foliage biomass : leaf:root-ratio
bg_g <- log10(bg_bio_kg*1000);             # 10-log of belowground biomass in g (*1000)
a1 <- c(NB = -0.070, LB = -0.097);
b1 <- c(NB = 1.236, LB = 1.071);
b2 <- c(NB = -0.0186, LB = 0.01794);
log.10.f_bio <- a1[spec]+ b1[spec]* bg_g+ b2[spec]*(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
f_bio_kg <- (10^log.10.f_bio)/1000;
switch(compartiment,
"bg" = bg_bio_kg,
"foliage" = f_bio_kg)
}
HBI.RG.below.1$LH_NH %>%
mutate(ag_GHGI_kg = GHGI_aB_Hb1.3(LH_NH, H_cm/100),
bg_poorter_kg= Poorter_rg_RSR_RLR(as.numeric(ag_GHGI_kg), LH_NH, compartiment = "bg"))
HBI.RG.below.1 %>%
mutate(ag_GHGI_kg = GHGI_aB_Hb1.3(LH_NH, H_cm/100),
bg_poorter_kg= Poorter_rg_RSR_RLR(as.numeric(ag_GHGI_kg), LH_NH, compartiment = "bg"))
HBI.RG.below.1 %>%
mutate(ag_GHGI_kg = GHGI_aB_Hb1.3(LH_NH, H_cm/100),
bg_poorter_kg= Poorter_rg_RSR_RLR(as.numeric(ag_GHGI_kg), LH_NH, compartiment = "bg"),
f_poorter_kg= Poorter_rg_RSR_RLR(as.numeric(ag_GHGI_kg), LH_NH, compartiment = "foliage"),
)
i = 1
# basic tree info
# select one tree ID and plot ID for each individual tree per plot and sampling circuit
my.plot.id <- HBI.RG.below.1[,"plot_ID"][i]
my.ccs.id <- HBI.RG.below.1[,"CCS_no"][i]
my.tree.id <- HBI.RG.below.1[,"tree_ID"][i]
# select variales for belowground functions
spp_LHNH = unique(HBI.RG.below.1$LH_NH[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])
h.m = as.numeric(unique(HBI.RG.below.1$H_cm[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))/100
spp_LHNH
h.m
ag_GHGI = GHGI_aB_Hb1.3(spp_LHNH, h.m)
h.cm = as.numeric(unique(HBI.RG.below.1$H_cm[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))
ag_GHGI = GHGI_aB_Hb1.3(spp_LHNH, h.m)
ag_GHGI
ag_GHGI = as.data.frame(GHGI_aB_Hb1.3(spp_LHNH, h.m))[1,]
ag_GHGI
Poorter_rg_RSR_RLR <- function(ag, spec, compartiment){ # instead of the species I have to put NH_LH here
# equation to transform aboveground into belowground biomass : stem:root-ratio
# quadratische ergänzung der Funktion: stem = a + b1*root + b2*root^2
# sten = b2*root^2 + b1*root + a
# stem = a*root^2 + b*root + c
# https://www.mathepanik.de/Klassen/Klasse_10/Lektion_Kl_10_L_parabeln_gleichung_loesen.php
c <- c(NB = -0.070, LB = -0.097);   # a
b <- c(NB = 1.236, LB = 1.071);     # b1
a <- c(NB = -0.0186, LB = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
ag_g <- log10(ag*1000)
# implement trasformed funtion
log.10.bg_bio = sqrt(((ag_g-c[spec])/a[spec])+ (((b[spec]/a[spec])/2)^2))+ (b[spec]/a[spec])/2
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
bg_bio_kg <- (10^log.10.bg_bio)/1000;
# equation to transform belowground into foliage biomass : leaf:root-ratio
bg_g <- log10(bg_bio_kg*1000);             # 10-log of belowground biomass in g (*1000)
a1 <- c(NB = 0.243, LB =  0.090);
b1 <- c(NB =  0.924, LB =  0.889);
b2 <- c(NB = -0.0282, LB = -0.0254);
log.10.f_bio <- a1[spec]+ b1[spec]* bg_g+ b2[spec]*(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
f_bio_kg <- (10^log.10.f_bio)/1000;
# equation to transform root into stem biomass
a3 <- c(NB = -0.070, LB = -0.097);   # a
b3 <- c(NB = 1.236, LB = 1.071);     # b1
b4 <- c(NB = -0.0186, LB = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
log.10.stem_bio <- a3[spec]+ b3[spec]*bg_g + b4[spec]*(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
stem_bio_kg <- (10^log.10.stem_bio)/1000;
switch(compartiment,
"bg" = bg_bio_kg,
"foliage" = f_bio_kg,
"stem" = stem_bio_kg)
}
Poorter_rg_RSR_RLR <- function(ag, spec, compartiment){ # instead of the species I have to put NH_LH here
# equation to transform aboveground into belowground biomass : stem:root-ratio
# quadratische ergänzung der Funktion: stem = a + b1*root + b2*root^2
# sten = b2*root^2 + b1*root + a
# stem = a*root^2 + b*root + c
# https://www.mathepanik.de/Klassen/Klasse_10/Lektion_Kl_10_L_parabeln_gleichung_loesen.php
c <- c(NB = -0.070, LB = -0.097);   # a
b <- c(NB = 1.236, LB = 1.071);     # b1
a <- c(NB = -0.0186, LB = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
ag_g <- log10(ag*1000)
# implement trasformed funtion
log.10.bg_bio = sqrt(((ag_g-c[spec])/a[spec])+ (((b[spec]/a[spec])/2)^2))+ (b[spec]/a[spec])/2
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
bg_bio_kg <- (10^log.10.bg_bio)/1000;
# equation to transform belowground into foliage biomass : leaf:root-ratio
bg_g <- log10(bg_bio_kg*1000);             # 10-log of belowground biomass in g (*1000)
a1 <- c(NB = 0.243, LB =  0.090);
b1 <- c(NB =  0.924, LB =  0.889);
b2 <- c(NB = -0.0282, LB = -0.0254);
log.10.f_bio <- a1[spec]+ b1[spec]* bg_g+ b2[spec]*(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
f_bio_kg <- (10^log.10.f_bio)/1000;
# equation to transform root into stem biomass
a3 <- c(NB = -0.070, LB = -0.097);   # a
b3 <- c(NB = 1.236, LB = 1.071);     # b1
b4 <- c(NB = -0.0186, LB = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
log.10.stem_bio <- a3[spec]+ b3[spec]*bg_g + b4[spec]*(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
stem_bio_kg <- (10^log.10.stem_bio)/1000;
switch(compartiment,
"bg" = bg_bio_kg,
"foliage" = f_bio_kg,
"stem" = stem_bio_kg)
}
ag_GHGI = as.data.frame(GHGI_aB_Hb1.3(spp_LHNH, h.m))[1,]
ag_GHGI
# calculate biomass per compartiment
B_kg_tree <- as.data.frame(cbind(
"compartiment" = c("sw+fw", "ndl", "ag", "bg"),
"B_kg_tree" = c(as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "stem"))[1,],
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,],
ag_GHGI,
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "bg"))[1,],
)))
# calculate biomass per compartiment
B_kg_tree <- as.data.frame(cbind(
"compartiment" = c("sw+fw", "ndl", "ag", "bg"),
"B_kg_tree" = c(as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "stem"))[1,],
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,],
ag_GHGI,
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "bg"))[1,]
)))
B_kg_tree
2.75474565536495e-05+3.83303831538982e-06
bio.info.df <- as.data.frame(cbind(
"plot_ID" = c(as.integer(my.plot.id)),
"tree_ID" = c(as.integer(my.tree.id)),
"inv" = unique(HBI.RG.below.1$inv[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]),
"inv_year" = c(as.integer(unique(HBI.RG.below.1$inv_year[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))),
"compartiment" = c(B_kg_tree$compartiment),
"B_kg_tree" = c(as.numeric(B_kg_tree$B_kg_tree))
)
)
bio.info.df
poorter.bio.ag.kg.RG.below.1[[i]] <- bio.info.df
poorter.bio.ag.bg.kg.RG.below.1 <- vector("list", length = nrow(HBI.RG.below.1))
for (i in 1:nrow(HBI.RG.below.1)) {
# i = 1
# basic tree info
# select one tree ID and plot ID for each individual tree per plot and sampling circuit
my.plot.id <- HBI.RG.below.1[,"plot_ID"][i]
my.ccs.id <- HBI.RG.below.1[,"CCS_no"][i]
my.tree.id <- HBI.RG.below.1[,"tree_ID"][i]
# select variales for belowground functions
spp_LHNH = unique(HBI.RG.below.1$LH_NH[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])
h.m = as.numeric(unique(HBI.RG.below.1$H_cm[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))/100
h.cm = as.numeric(unique(HBI.RG.below.1$H_cm[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))
ag_GHGI = as.data.frame(GHGI_aB_Hb1.3(spp_LHNH, h.m))[1,]
# calculate biomass per compartiment
B_kg_tree <- as.data.frame(cbind(
"compartiment" = c("sw+fw", "ndl", "ag", "bg"),
"B_kg_tree" = c(as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "stem"))[1,],
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,],
ag_GHGI,
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "bg"))[1,]
)))
bio.info.df <- as.data.frame(cbind(
"plot_ID" = c(as.integer(my.plot.id)),
"tree_ID" = c(as.integer(my.tree.id)),
"inv" = unique(HBI.RG.below.1$inv[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]),
"inv_year" = c(as.integer(unique(HBI.RG.below.1$inv_year[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))),
"compartiment" = c(B_kg_tree$compartiment),
"B_kg_tree" = c(as.numeric(B_kg_tree$B_kg_tree))
)
)
poorter.bio.ag.bg.kg.RG.below.1[[i]] <- bio.info.df
}
poorter.bio.ag.bg.kg.RG.below.1.df <- as.data.frame(rbindlist(poorter.bio.ag.bg.kg.RG.below.1))
poorter.bio.ag.bg.kg.RG.below.1.df
geom_bar
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df, stat = "B_kg_tree")
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df, color = "compartiment")
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df, aes(x = compartiment, y = B_kg_tree) color = "compartiment")
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df, aes(x = compartiment, y = B_kg_tree), color = "compartiment")
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df, aes(x = compartiment, y = B_kg_tree))
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df, aes(x = compartiment, y = B_kg_tree), stat="identity")
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df, aes(x = compartiment, y = mean(B_kg_tree)), stat="identity")
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df, aes(x = compartiment, y = mean(na.omit(B_kg_tree))), stat="identity")
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df, aes(x = compartiment, y = B_kg_tree), stat="identity")+
geom_bar(data = poorter.bio.ag.bg.kg.RG.below.1.df, aes(x = compartiment, y = B_kg_tree), stat="identity")
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df %>% mutate(bio_method = "wolff"), aes(x = compartiment, y = B_kg_tree), stat="identity")+
geom_bar(data = poorter.bio.ag.bg.kg.RG.below.1.df %>% mutate(bio_method = "poorter"), aes(x = compartiment, y = B_kg_tree, color = compartiment), stat="identity")
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df %>% mutate(bio_method = "wolff"), aes(x = compartiment, y = B_kg_tree, color = bio_method), stat="identity")+
geom_bar(data = poorter.bio.ag.bg.kg.RG.below.1.df %>% mutate(bio_method = "poorter"), aes(x = compartiment, y = B_kg_tree, color = bio_method), stat="identity")
bio.ag.kg.RG.below.1.df
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df %>% mutate(bio_method = "wolff"),
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method), stat="identity", position = "dodge")+
geom_bar(data = poorter.bio.ag.bg.kg.RG.below.1.df %>% mutate(bio_method = "poorter"),
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method), stat="identity")
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df %>% mutate(bio_method = "wolff"),
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method),
stat="identity", position = "dodge")+
geom_bar(data = poorter.bio.ag.bg.kg.RG.below.1.df %>% mutate(bio_method = "poorter"),
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method),
stat="identity", position = "dodge")
ggplot()+
geom_bar(data = bio.ag.kg.RG.below.1.df %>% mutate(bio_method = "wolff"),
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method),
stat="identity", position = "dodge")
wolff.bio.below.1m
(bio.ag.kg.RG.below.1.df %>% mutate(bio_method = "wolff"))[1,]
ggplot()+
geom_bar(data = (bio.ag.kg.RG.below.1.df %>% mutate(bio_method = "wolff"))[1,],
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method),
stat="identity", position = "dodge")
ggplot()+
geom_bar(data = (bio.ag.kg.RG.below.1.df %>% mutate(bio_method = "wolff"))[1:3,],
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method),
stat="identity", position = "dodge")
# visualizing biomass comparisson poorter vs. Wolff -----------------------
ggplot()+
geom_bar(data = (bio.ag.kg.RG.below.1.df %>% mutate(bio_method = "wolff"))[1:3,],
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method),
stat="identity", position = "dodge")+
geom_bar(data = (poorter.bio.ag.bg.kg.RG.below.1.df %>% mutate(bio_method = "poorter"))[1:4,],
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method),
stat="identity", position = "dodge")
ggplot()+
geom_bar(data = (poorter.bio.ag.bg.kg.RG.below.1.df %>% mutate(bio_method = "poorter"))[1:4,],
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method),
stat="identity", position = "dodge")
poorter.bio.ag.bg.kg.RG.below.1.df
ggplot()+
geom_bar(data = (poorter.bio.ag.bg.kg.RG.below.1.df %>% mutate(bio_method = "poorter"))[1:4,],
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method),
stat="identity", position = "dodge")
ggplot()+
geom_bar(data = (bio.ag.kg.RG.below.1.df %>% mutate(bio_method = "wolff"))[1:3,],
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method),
stat="identity", position = "dodge")
(poorter.bio.ag.bg.kg.RG.below.1.df %>% mutate(bio_method = "poorter"))[1:4,]
ggplot()+
geom_bar(data = (poorter.bio.ag.bg.kg.RG.below.1.df %>% mutate(bio_method = "poorter"))[1:4,],
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method),
stat="identity", position = "dodge")
HBI.RG.below.1
i = 1
# basic tree info
# select one tree ID and plot ID for each individual tree per plot and sampling circuit
my.plot.id <- HBI.RG.below.1[,"plot_ID"][i]
my.ccs.id <- HBI.RG.below.1[,"CCS_no"][i]
my.tree.id <- HBI.RG.below.1[,"tree_ID"][i]
BL.or.CF <- unique(HBI.RG.below.1$LH_NH[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])
# select variales for belowground functions
spp = unique(HBI.RG.below.1$RG_Wolff_bio[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])
h.cm = as.numeric(unique(HBI.RG.below.1$H_cm[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))
whd.cm = as.numeric(h.to.whd(h.cm, spp))
whd.cm
h.cm
spp

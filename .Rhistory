geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ", as.integer(B_kg_tree_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.ag.comp)
# print ag and bg compartiment in relation to
p.total.comp <- avg_B_tree_biospgroups %>%
filter(compartiment %in% c("ag", "bg") & Bio_SP_group == my.sp) %>%
mutate(csum = rev(cumsum(rev(B_kg_tree_percent))),
pos = B_kg_tree_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), B_kg_tree_percent/2, pos)) %>%
ggplot(., aes(x="", y=B_kg_tree_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ",
as.integer(B_kg_tree_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
# remove legend for  https://statisticsglobe.com/remove-legend-ggplot2-r
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.total.comp)
# save the ag compartiment plots in list
p_ag_comp[[i]] <- p.ag.comp
# save the total compartiment plots in list
p_total[[i]] <- p.total.comp
}
trees_data  %>%
#mutate(B_t_tree = ton(B_kg_tree)) %>%
group_by(inv_year, Bio_SP_group, compartiment) %>%
summarise(B_kg_tree = mean(B_kg_tree)) %>%
#filter(compartiment %in% c("ag", "bg")) %>%
pivot_wider(names_from = compartiment, values_from = B_kg_tree) %>%
arrange(Bio_SP_group)
trees_data  %>%
#mutate(B_t_tree = ton(B_kg_tree)) %>%
group_by(inv_year, Bio_SP_group, compartiment) %>%
summarise(B_kg_tree = mean(B_kg_tree)) %>%
#filter(compartiment %in% c("ag", "bg")) %>%
pivot_wider(names_from = compartiment, values_from = B_kg_tree) %>%
arrange(Bio_SP_group) %>%
# calcualte the percentage each compartiment contributes to the total bioass of a tree of
# the respective species at the respective plot
# https://stackoverflow.com/questions/47821241/how-to-divide-a-number-of-columns-by-one-column
mutate(across(c(ag:total),.fns = ~./total*100)) %>%
pivot_longer(., ag:total,
names_to = "compartiment",
values_to = "B_kg_tree_percent")
avg_B_tree_biospgroups <- trees_data  %>%
#mutate(B_t_tree = ton(B_kg_tree)) %>%
group_by(inv_year, Bio_SP_group, compartiment) %>%
summarise(B_kg_tree = mean(B_kg_tree)) %>%
#filter(compartiment %in% c("ag", "bg")) %>%
pivot_wider(names_from = compartiment, values_from = B_kg_tree) %>%
arrange(Bio_SP_group) %>%
# calcualte the percentage each compartiment contributes to the total bioass of a tree of
# the respective species at the respective plot
# https://stackoverflow.com/questions/47821241/how-to-divide-a-number-of-columns-by-one-column
mutate(across(c(ag:total),.fns = ~./total*100)) %>%
pivot_longer(., ag:total,
names_to = "compartiment",
values_to = "B_kg_tree_percent")
# prepare list for ag compartiment plots to arrage them in grid
p_ag_comp <- list()
# prepare list for ag compartiment plots to arrage them in grid
p_total <- list()
for (i in 1:length(unique(avg_B_tree_biospgroups$Bio_SP_group))) {
# i = 1
my.sp <- unique(avg_B_tree_biospgroups$Bio_SP_group)[i]
# plot all aboveground compartiments in relation to the total biomass
p.ag.comp <- avg_B_tree_biospgroups %>%
filter(!(compartiment %in% c("total", "ag")) & Bio_SP_group == my.sp) %>%
mutate(csum = rev(cumsum(rev(B_kg_tree_percent))),
pos = B_kg_tree_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), B_kg_tree_percent/2, pos)) %>%
ggplot(., aes(x="", y=B_kg_tree_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ", as.integer(B_kg_tree_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.ag.comp)
# print ag and bg compartiment in relation to
p.total.comp <- avg_B_tree_biospgroups %>%
filter(compartiment %in% c("ag", "bg") & Bio_SP_group == my.sp) %>%
mutate(csum = rev(cumsum(rev(B_kg_tree_percent))),
pos = B_kg_tree_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), B_kg_tree_percent/2, pos)) %>%
ggplot(., aes(x="", y=B_kg_tree_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ",
as.integer(B_kg_tree_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
# remove legend for  https://statisticsglobe.com/remove-legend-ggplot2-r
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.total.comp)
# save the ag compartiment plots in list
p_ag_comp[[i]] <- p.ag.comp
# save the total compartiment plots in list
p_total[[i]] <- p.total.comp
}
avg_B_tree_biospgroups <- trees_data  %>%
#mutate(B_t_tree = ton(B_kg_tree)) %>%
group_by(inv_year, Bio_SP_group, compartiment) %>%
summarise(B_kg_tree = mean(B_kg_tree)) %>%
#filter(compartiment %in% c("ag", "bg")) %>%
pivot_wider(names_from = compartiment, values_from = B_kg_tree) %>%
arrange(Bio_SP_group) %>%
# calcualte the percentage each compartiment contributes to the total bioass of a tree of
# the respective species at the respective plot
# https://stackoverflow.com/questions/47821241/how-to-divide-a-number-of-columns-by-one-column
mutate(across(c(ag:total),.fns = ~./total*100)) %>%
pivot_longer(., ag:total,
names_to = "compartiment",
values_to = "B_kg_tree_percent")
avg_B_tree_biospgroups
# prepare list for ag compartiment plots to arrage them in grid
p_ag_comp <- list()
# prepare list for ag compartiment plots to arrage them in grid
p_total <- list()
for (i in 1:length(unique(avg_B_tree_biospgroups$Bio_SP_group))) {
# i = 1
my.sp <- unique(avg_B_tree_biospgroups$Bio_SP_group)[i]
# plot all aboveground compartiments in relation to the total biomass
p.ag.comp <- avg_B_tree_biospgroups %>%
filter(!(compartiment %in% c("total", "ag")) & Bio_SP_group == my.sp) %>%
mutate(csum = rev(cumsum(rev(B_kg_tree_percent))),
pos = B_kg_tree_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), B_kg_tree_percent/2, pos)) %>%
ggplot(., aes(x="", y=B_kg_tree_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ", as.integer(B_kg_tree_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.ag.comp)
# print ag and bg compartiment in relation to
p.total.comp <- avg_B_tree_biospgroups %>%
filter(compartiment %in% c("ag", "bg") & Bio_SP_group == my.sp) %>%
mutate(csum = rev(cumsum(rev(B_kg_tree_percent))),
pos = B_kg_tree_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), B_kg_tree_percent/2, pos)) %>%
ggplot(., aes(x="", y=B_kg_tree_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ",
as.integer(B_kg_tree_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
# remove legend for  https://statisticsglobe.com/remove-legend-ggplot2-r
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.total.comp)
# save the ag compartiment plots in list
p_ag_comp[[i]] <- p.ag.comp
# save the total compartiment plots in list
p_total[[i]] <- p.total.comp
}
avg_B_tree_biospgroups %>%
filter(!(compartiment %in% c("total", "ag")) & Bio_SP_group == my.sp) %>%
mutate(csum = rev(cumsum(rev(B_kg_tree_percent))),
pos = B_kg_tree_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), B_kg_tree_percent/2, pos)) %>%
ggplot(., aes(x="", y=B_kg_tree_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ", as.integer(B_kg_tree_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
i = 2
# i = 2
my.sp <- unique(avg_B_tree_biospgroups$Bio_SP_group)[i]
my.sp
avg_B_tree_biospgroups %>%
filter(!(compartiment %in% c("total", "ag")) & Bio_SP_group == my.sp) %>%
mutate(csum = rev(cumsum(rev(B_kg_tree_percent))),
pos = B_kg_tree_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), B_kg_tree_percent/2, pos)) %>%
ggplot(., aes(x="", y=B_kg_tree_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ", as.integer(B_kg_tree_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
# i = 3
my.sp <- unique(avg_B_tree_biospgroups$Bio_SP_group)[i]
i = 3
# i = 3
my.sp <- unique(avg_B_tree_biospgroups$Bio_SP_group)[i]
# plot all aboveground compartiments in relation to the total biomass
p.ag.comp <- avg_B_tree_biospgroups %>%
filter(!(compartiment %in% c("total", "ag")) & Bio_SP_group == my.sp) %>%
mutate(csum = rev(cumsum(rev(B_kg_tree_percent))),
pos = B_kg_tree_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), B_kg_tree_percent/2, pos)) %>%
ggplot(., aes(x="", y=B_kg_tree_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ", as.integer(B_kg_tree_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.ag.comp)
# print ag and bg compartiment in relation to
p.total.comp <- avg_B_tree_biospgroups %>%
filter(compartiment %in% c("ag", "bg") & Bio_SP_group == my.sp) %>%
mutate(csum = rev(cumsum(rev(B_kg_tree_percent))),
pos = B_kg_tree_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), B_kg_tree_percent/2, pos)) %>%
ggplot(., aes(x="", y=B_kg_tree_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ",
as.integer(B_kg_tree_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
# remove legend for  https://statisticsglobe.com/remove-legend-ggplot2-r
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.total.comp)
for (i in 1:length(unique(avg_B_tree_biospgroups$Bio_SP_group))) {
# i = 3
my.sp <- unique(avg_B_tree_biospgroups$Bio_SP_group)[i]
# plot all aboveground compartiments in relation to the total biomass
p.ag.comp <- avg_B_tree_biospgroups %>%
filter(!(compartiment %in% c("total", "ag")) & Bio_SP_group == my.sp) %>%
mutate(csum = rev(cumsum(rev(B_kg_tree_percent))),
pos = B_kg_tree_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), B_kg_tree_percent/2, pos)) %>%
ggplot(., aes(x="", y=B_kg_tree_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ", as.integer(B_kg_tree_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.ag.comp)
# print ag and bg compartiment in relation to
p.total.comp <- avg_B_tree_biospgroups %>%
filter(compartiment %in% c("ag", "bg") & Bio_SP_group == my.sp) %>%
mutate(csum = rev(cumsum(rev(B_kg_tree_percent))),
pos = B_kg_tree_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), B_kg_tree_percent/2, pos)) %>%
ggplot(., aes(x="", y=B_kg_tree_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ",
as.integer(B_kg_tree_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
# remove legend for  https://statisticsglobe.com/remove-legend-ggplot2-r
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.total.comp)
# save the ag compartiment plots in list
p_ag_comp[[i]] <- p.ag.comp
# save the total compartiment plots in list
p_total[[i]] <- p.total.comp
}
# https://stackoverflow.com/questions/9315611/grid-of-multiple-ggplot2-plots-which-have-been-made-in-a-for-loop
do.call(grid.arrange, p_ag_comp)
do.call(grid.arrange, p_total)
# 5.1.1. average hectar Biomass per compartiment by species  ------------------------
LT_B_percent_SP <- LT_summary %>%
filter(SP_code != "all" &
plot_ID != "all") %>%
select(stand_component, plot_ID, inv_year, SP_code, compartiment, B_t_ha) %>%
group_by(stand_component, inv_year, SP_code, compartiment) %>%
summarise(B_t_ha = mean(B_t_ha)) %>%
pivot_wider(names_from = compartiment, values_from = B_t_ha) %>%
# calcualte the percentage each compartiment contributes to the total bioass of a tree of
# the respective species at the respective plot
# https://stackoverflow.com/questions/47821241/how-to-divide-a-number-of-columns-by-one-column
mutate(across(c(ag:total),.fns = ~./total*100)) %>%
pivot_longer(., ag:total,
names_to = "compartiment",
values_to = "B_t_ha_percent")
# prepare list for ag compartiment plots to arrage them in grid
p_ag_comp <- list()
# prepare list for ag compartiment plots to arrage them in grid
p_total <- list()
for (i in 1:length(unique(LT_B_percent_SP$SP_code))) {
# i = 1
my.sp <- unique(LT_B_percent_SP$SP_code)[i]
# plot all aboveground compartiments in relation to the total biomass
p.ag.comp <- LT_B_percent_SP %>%
filter(!(compartiment %in% c("total", "ag")) & SP_code == my.sp) %>%
mutate(csum = rev(cumsum(rev(B_t_ha_percent))),
pos = B_t_ha_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), B_t_ha_percent/2, pos)) %>%
ggplot(., aes(x="", y=B_t_ha_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ", as.integer(B_t_ha_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.ag.comp)
# print ag and bg compartiment in relation to
p.total.comp <- LT_B_percent_SP %>%
filter(compartiment %in% c("ag", "bg") & SP_code == my.sp) %>%
mutate(csum = rev(cumsum(rev(B_t_ha_percent))),
pos = B_t_ha_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), B_t_ha_percent/2, pos)) %>%
ggplot(., aes(x="", y=B_t_ha_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ",
as.integer(B_t_ha_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
# remove legend for  https://statisticsglobe.com/remove-legend-ggplot2-r
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.total.comp)
# save the ag compartiment plots in list
p_ag_comp[[i]] <- p.ag.comp
# save the total compartiment plots in list
p_total[[i]] <- p.total.comp
}
# https://stackoverflow.com/questions/9315611/grid-of-multiple-ggplot2-plots-which-have-been-made-in-a-for-loop
do.call(grid.arrange, p_ag_comp)
# https://stackoverflow.com/questions/9315611/grid-of-multiple-ggplot2-plots-which-have-been-made-in-a-for-loop
do.call(grid.arrange, p_ag_comp)
# 5.1.1. average hectar Biomass per compartiment by species  ------------------------
LT_N_percent_SP <- LT_summary %>%
filter(SP_code != "all" &
plot_ID != "all") %>%
select(stand_component, plot_ID, inv_year, SP_code, compartiment, N_t_ha) %>%
group_by(stand_component, inv_year, SP_code, compartiment) %>%
summarise(N_t_ha = mean(N_t_ha)) %>%
pivot_wider(names_from = compartiment, values_from = N_t_ha) %>%
# calcualte the percentage each compartiment contributes to the total bioass of a tree of
# the respective species at the respective plot
# https://stackoverflow.com/questions/47821241/how-to-divide-a-number-of-columns-by-one-column
mutate(across(c(ag:total),.fns = ~./total*100)) %>%
pivot_longer(., ag:total,
names_to = "compartiment",
values_to = "N_t_ha_percent")
LT_N_percent_SP
# prepare list for ag compartiment plots to arrage them in grid
p_ag_comp <- list()
# prepare list for ag compartiment plots to arrage them in grid
p_total <- list()
# prepare list for ag compartiment plots to arrage them in grid
p_total <- list()
# 5.1.1. average hectar Biomass per compartiment by species  ------------------------
LT_N_percent_SP <- LT_summary %>%
filter(SP_code != "all" &
plot_ID != "all") %>%
select(stand_component, plot_ID, inv_year, SP_code, compartiment, N_t_ha) %>%
group_by(stand_component, inv_year, SP_code, compartiment) %>%
summarise(N_t_ha = mean(N_t_ha)) %>%
pivot_wider(names_from = compartiment, values_from = N_t_ha) %>%
# calcualte the percentage each compartiment contributes to the total bioass of a tree of
# the respective species at the respective plot
# https://stackoverflow.com/questions/47821241/how-to-divide-a-number-of-columns-by-one-column
mutate(across(c(ag:total),.fns = ~./total*100)) %>%
pivot_longer(., ag:total,
names_to = "compartiment",
values_to = "N_t_ha_percent")
# prepare list for ag compartiment plots to arrage them in grid
p_ag_comp <- list()
# prepare list for ag compartiment plots to arrage them in grid
p_total <- list()
for (i in 1:length(unique(LT_N_percent_SP$SP_code))) {
# i = 1
my.sp <- unique(LT_N_percent_SP$SP_code)[i]
# plot all aboveground compartiments in relation to the total biomass
p.ag.comp <- LT_N_percent_SP %>%
filter(!(compartiment %in% c("total", "ag", "bg")) & SP_code == my.sp) %>%
mutate(csum = rev(cumsum(rev(N_t_ha_percent))),
pos = N_t_ha_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), N_t_ha_percent/2, pos)) %>%
ggplot(., aes(x="", y=N_t_ha_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ", as.integer(N_t_ha_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.ag.comp)
# print ag and bg compartiment in relation to
p.total.comp <- LT_N_percent_SP %>%
filter(compartiment %in% c("ag", "bg") & SP_code == my.sp) %>%
mutate(csum = rev(cumsum(rev(N_t_ha_percent))),
pos = N_t_ha_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), N_t_ha_percent/2, pos)) %>%
ggplot(., aes(x="", y=N_t_ha_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ",
as.integer(N_t_ha_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
# remove legend for  https://statisticsglobe.com/remove-legend-ggplot2-r
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.total.comp)
# save the ag compartiment plots in list
p_ag_comp[[i]] <- p.ag.comp
# save the total compartiment plots in list
p_total[[i]] <- p.total.comp
}
for (i in 1:length(unique(LT_N_percent_SP$SP_code))) {
# i = 1
my.sp <- unique(LT_N_percent_SP$SP_code)[i]
# plot all aboveground compartiments in relation to the total biomass
p.ag.comp <- LT_N_percent_SP %>%
filter(!(compartiment %in% c("total", "ag", "bg")) & SP_code == my.sp) %>%
mutate(csum = rev(cumsum(rev(N_t_ha_percent))),
pos = N_t_ha_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), N_t_ha_percent/2, pos)) %>%
ggplot(., aes(x="", y=N_t_ha_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ", as.integer(N_t_ha_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.ag.comp)
# print ag and bg compartiment in relation to
p.total.comp <- LT_N_percent_SP %>%
filter(compartiment %in% c("ag", "bg") & SP_code == my.sp) %>%
mutate(csum = rev(cumsum(rev(N_t_ha_percent))),
pos = N_t_ha_percent/2 + lead(csum, 1),
pos = if_else(is.na(pos), N_t_ha_percent/2, pos)) %>%
ggplot(., aes(x="", y=N_t_ha_percent, fill = compartiment)) +
geom_col(width = 1, color = 1) +
# ggtitle(paste("average Biomass in kg per singe tree per compartiment of species", my.sp," across all plots"))+
ggtitle(paste(my.sp))+
coord_polar("y", start=0)+
geom_label_repel(aes(y = pos,
label = paste0(compartiment,": ",
as.integer(N_t_ha_percent), "%")),
size = 4.5, nudge_x = 1, show.legend = F) +
# remove legend for  https://statisticsglobe.com/remove-legend-ggplot2-r
guides(fill = "none")+
# guides(fill = guide_legend(title = "compartiment")) +
theme_void()
print(p.total.comp)
# save the ag compartiment plots in list
p_ag_comp[[i]] <- p.ag.comp
# save the total compartiment plots in list
p_total[[i]] <- p.total.comp
}

select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_HBI")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm,  mean_l_m, sd_l_m)),
by = c("stand_component", "plot_ID", "dw_sp", "dw_type", "ST_LY_type", "decay", "compartiment")) %>%
# if there are plots/ species or stands that were not established in HBI and thus do not have stocks
# or if there are plots/ species or stands that are not present in BZE3 anymore but have stocks in HBI
# we have to set their stock per ha to 0 to make sure the calculations can also track "negative growth"
mutate(across(contains("t_ha"), ~ifelse(is.na(.x), 0, .x)) )%>%
# for n_ha and n_dw_TY, n_dec we do the same but as these values were calculated only for the whole plot we
# apply the correction only to rows witch plot_ID != all, but decay, dw_type and species  == "all"
mutate(across(contains("n_ha") | contains("n_dec") | contains("n_dw_TY") , ~ifelse(is.na(.x) &
plot_ID != "all"&
dw_sp == "all" &
dw_type == "all" &
decay == "all" , 0, .x)) ) %>%
# this is to replace NA for missing average values. Average values were calcualted for the following groups:
# everything != "all" excecpt decay == "all"
# everything ! = "all" except dw_type == "all"
# Everything != "all" except dw_sp == "all"
# https://stackoverflow.com/questions/69560076/r-applying-condition-across-multiple-columns-ignoring-na
# !!! this doensnt work
# mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & if_any(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~ . %in% "all"),
# count the "all"s that occure and select only rows where it appears 2 times
#0, .x)) ) %>%
# # https://stackoverflow.com/questions/24015557/count-occurrences-of-value-in-a-set-of-variables-in-r-per-row
mutate(all_count = apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all"))) >= 2)
# count the "all"s that occure and select only rows where it appears 2 times
DW_stock_changes_P$all_count <- apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all")))
DW_stock_changes_P
View(DW_stock_changes_P)
# 2. DEADWOOD CALCULATIONS --------------------------------------------
# 2.1. changes in stocks per ha --------------------------------------------
DW_stock_changes_P <-
BZE3_DW_summary %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_BZE3")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m)) %>%
left_join(., HBI_DW_summary %>%
#filter(plot_ID != "all" & SP_code == "all" & stand == "all") %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_HBI")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm,  mean_l_m, sd_l_m)),
by = c("stand_component", "plot_ID", "dw_sp", "dw_type", "ST_LY_type", "decay", "compartiment")) %>%
# if there are plots/ species or stands that were not established in HBI and thus do not have stocks
# or if there are plots/ species or stands that are not present in BZE3 anymore but have stocks in HBI
# we have to set their stock per ha to 0 to make sure the calculations can also track "negative growth"
mutate(across(contains("t_ha"), ~ifelse(is.na(.x), 0, .x)) )%>%
# for n_ha and n_dw_TY, n_dec we do the same but as these values were calculated only for the whole plot we
# apply the correction only to rows witch plot_ID != all, but decay, dw_type and species  == "all"
mutate(across(contains("n_ha") | contains("n_dec") | contains("n_dw_TY") , ~ifelse(is.na(.x) &
plot_ID != "all"&
dw_sp == "all" &
dw_type == "all" &
decay == "all" , 0, .x)) ) %>%
# this is to replace NA for missing average values. Average values were calcualted for the following groups:
# everything != "all" excecpt decay == "all"
# everything ! = "all" except dw_type == "all"
# Everything != "all" except dw_sp == "all"
# https://stackoverflow.com/questions/69560076/r-applying-condition-across-multiple-columns-ignoring-na
# !!! this doensnt work
# mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & if_any(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~ . %in% "all"),
# count the "all"s that occure and select only rows where it appears 2 times
#0, .x)) ) %>%
# # https://stackoverflow.com/questions/24015557/count-occurrences-of-value-in-a-set-of-variables-in-r-per-row
mutate(all_count = apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all")))) %>%
mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & (apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all"))) >= 2) == T,
0, .x)) ) %>%
# # mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & across(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~`==`(.x, x)),
# #                                                           0, .x)) ) %>%
arrange(plot_ID, dw_sp, dw_type, ST_LY_type, decay)
# 2. DEADWOOD CALCULATIONS --------------------------------------------
# 2.1. changes in stocks per ha --------------------------------------------
DW_stock_changes_P <-
BZE3_DW_summary %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_BZE3")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m)) %>%
left_join(., HBI_DW_summary %>%
#filter(plot_ID != "all" & SP_code == "all" & stand == "all") %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_HBI")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm,  mean_l_m, sd_l_m)),
by = c("stand_component", "plot_ID", "dw_sp", "dw_type", "ST_LY_type", "decay", "compartiment")) %>%
# if there are plots/ species or stands that were not established in HBI and thus do not have stocks
# or if there are plots/ species or stands that are not present in BZE3 anymore but have stocks in HBI
# we have to set their stock per ha to 0 to make sure the calculations can also track "negative growth"
mutate(across(contains("t_ha"), ~ifelse(is.na(.x), 0, .x)) )%>%
# for n_ha and n_dw_TY, n_dec we do the same but as these values were calculated only for the whole plot we
# apply the correction only to rows witch plot_ID != all, but decay, dw_type and species  == "all"
mutate(across(contains("n_ha") | contains("n_dec") | contains("n_dw_TY") , ~ifelse(is.na(.x) &
plot_ID != "all"&
dw_sp == "all" &
dw_type == "all" &
decay == "all" , 0, .x)) ) %>%
# this is to replace NA for missing average values. Average values were calcualted for the following groups:
# everything != "all" excecpt decay == "all"
# everything ! = "all" except dw_type == "all"
# Everything != "all" except dw_sp == "all"
# https://stackoverflow.com/questions/69560076/r-applying-condition-across-multiple-columns-ignoring-na
# !!! this doensnt work
# mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & if_any(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~ . %in% "all"),
# count the "all"s that occure and select only rows where it appears 2 times
#0, .x)) ) %>%
# # https://stackoverflow.com/questions/24015557/count-occurrences-of-value-in-a-set-of-variables-in-r-per-row
mutate(all_count = apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all")))) %>%
mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & (apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all"))) >= 2) == T,
0, .x)) ) %>%
# # mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & across(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~`==`(.x, x)),
# #                                                           0, .x)) ) %>%
arrange(plot_ID, dw_sp, dw_type, ST_LY_type, decay)
View(DW_stock_changes_P)
# 2. DEADWOOD CALCULATIONS --------------------------------------------
# 2.1. changes in stocks per ha --------------------------------------------
DW_stock_changes_P <-
BZE3_DW_summary %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_BZE3")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m)) %>%
left_join(., HBI_DW_summary %>%
#filter(plot_ID != "all" & SP_code == "all" & stand == "all") %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_HBI")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm,  mean_l_m, sd_l_m)),
by = c("stand_component", "plot_ID", "dw_sp", "dw_type", "ST_LY_type", "decay", "compartiment")) %>%
# if there are plots/ species or stands that were not established in HBI and thus do not have stocks
# or if there are plots/ species or stands that are not present in BZE3 anymore but have stocks in HBI
# we have to set their stock per ha to 0 to make sure the calculations can also track "negative growth"
mutate(across(contains("t_ha"), ~ifelse(is.na(.x), 0, .x)) )%>%
# for n_ha and n_dw_TY, n_dec we do the same but as these values were calculated only for the whole plot we
# apply the correction only to rows witch plot_ID != all, but decay, dw_type and species  == "all"
mutate(across(contains("n_ha") | contains("n_dec") | contains("n_dw_TY") , ~ifelse(is.na(.x) &
plot_ID != "all"&
dw_sp == "all" &
dw_type == "all" &
decay == "all" , 0, .x)) ) %>%
# this is to replace NA for missing average values. Average values were calcualted for the following groups:
# everything != "all" excecpt decay == "all"
# everything ! = "all" except dw_type == "all"
# Everything != "all" except dw_sp == "all"
# https://stackoverflow.com/questions/69560076/r-applying-condition-across-multiple-columns-ignoring-na
# !!! this doensnt work
# mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & if_any(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~ . %in% "all"),
# count the "all"s that occure and select only rows where it appears 2 times
#0, .x)) ) %>%
# # https://stackoverflow.com/questions/24015557/count-occurrences-of-value-in-a-set-of-variables-in-r-per-row
mutate(all_count = apply(c("plot_ID",
"dw_sp",
"dw_type",
"decay" ), 1, function(x) length(which(x=="all")))) %>%
mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & (apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all"))) >= 2) == T,
0, .x)) ) %>%
# # mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & across(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~`==`(.x, x)),
# #                                                           0, .x)) ) %>%
arrange(plot_ID, dw_sp, dw_type, ST_LY_type, decay)
# 2. DEADWOOD CALCULATIONS --------------------------------------------
# 2.1. changes in stocks per ha --------------------------------------------
DW_stock_changes_P <-
BZE3_DW_summary %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_BZE3")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m)) %>%
left_join(., HBI_DW_summary %>%
#filter(plot_ID != "all" & SP_code == "all" & stand == "all") %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_HBI")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm,  mean_l_m, sd_l_m)),
by = c("stand_component", "plot_ID", "dw_sp", "dw_type", "ST_LY_type", "decay", "compartiment")) %>%
# if there are plots/ species or stands that were not established in HBI and thus do not have stocks
# or if there are plots/ species or stands that are not present in BZE3 anymore but have stocks in HBI
# we have to set their stock per ha to 0 to make sure the calculations can also track "negative growth"
mutate(across(contains("t_ha"), ~ifelse(is.na(.x), 0, .x)) )%>%
# for n_ha and n_dw_TY, n_dec we do the same but as these values were calculated only for the whole plot we
# apply the correction only to rows witch plot_ID != all, but decay, dw_type and species  == "all"
mutate(across(contains("n_ha") | contains("n_dec") | contains("n_dw_TY") , ~ifelse(is.na(.x) &
plot_ID != "all"&
dw_sp == "all" &
dw_type == "all" &
decay == "all" , 0, .x)) ) %>%
# this is to replace NA for missing average values. Average values were calcualted for the following groups:
# everything != "all" excecpt decay == "all"
# everything ! = "all" except dw_type == "all"
# Everything != "all" except dw_sp == "all"
# https://stackoverflow.com/questions/69560076/r-applying-condition-across-multiple-columns-ignoring-na
# !!! this doensnt work
# mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & if_any(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~ . %in% "all"),
# count the "all"s that occure and select only rows where it appears 2 times
#0, .x)) ) %>%
# # https://stackoverflow.com/questions/24015557/count-occurrences-of-value-in-a-set-of-variables-in-r-per-row
mutate(all_count = apply(., c("plot_ID",
"dw_sp",
"dw_type",
"decay" ), 1, function(x) length(which(x=="all")))) %>%
mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & (apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all"))) >= 2) == T,
0, .x)) ) %>%
# # mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & across(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~`==`(.x, x)),
# #                                                           0, .x)) ) %>%
arrange(plot_ID, dw_sp, dw_type, ST_LY_type, decay)
# 2. DEADWOOD CALCULATIONS --------------------------------------------
# 2.1. changes in stocks per ha --------------------------------------------
DW_stock_changes_P <-
BZE3_DW_summary %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_BZE3")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m)) %>%
left_join(., HBI_DW_summary %>%
#filter(plot_ID != "all" & SP_code == "all" & stand == "all") %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_HBI")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm,  mean_l_m, sd_l_m)),
by = c("stand_component", "plot_ID", "dw_sp", "dw_type", "ST_LY_type", "decay", "compartiment")) %>%
# if there are plots/ species or stands that were not established in HBI and thus do not have stocks
# or if there are plots/ species or stands that are not present in BZE3 anymore but have stocks in HBI
# we have to set their stock per ha to 0 to make sure the calculations can also track "negative growth"
mutate(across(contains("t_ha"), ~ifelse(is.na(.x), 0, .x)) )%>%
# for n_ha and n_dw_TY, n_dec we do the same but as these values were calculated only for the whole plot we
# apply the correction only to rows witch plot_ID != all, but decay, dw_type and species  == "all"
mutate(across(contains("n_ha") | contains("n_dec") | contains("n_dw_TY") , ~ifelse(is.na(.x) &
plot_ID != "all"&
dw_sp == "all" &
dw_type == "all" &
decay == "all" , 0, .x)) ) %>%
# this is to replace NA for missing average values. Average values were calcualted for the following groups:
# everything != "all" excecpt decay == "all"
# everything ! = "all" except dw_type == "all"
# Everything != "all" except dw_sp == "all"
# https://stackoverflow.com/questions/69560076/r-applying-condition-across-multiple-columns-ignoring-na
# !!! this doensnt work
# mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & if_any(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~ . %in% "all"),
# count the "all"s that occure and select only rows where it appears 2 times
#0, .x)) ) %>%
# # https://stackoverflow.com/questions/24015557/count-occurrences-of-value-in-a-set-of-variables-in-r-per-row
mutate(all_count = apply(c("plot_ID",
"dw_sp",
"dw_type",
"decay" ), 1, function(x) length(which(x=="all")))) %>%
mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & (apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all"))) >= 2) == T,
0, .x)) ) %>%
# # mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & across(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~`==`(.x, x)),
# #                                                           0, .x)) ) %>%
arrange(plot_ID, dw_sp, dw_type, ST_LY_type, decay)
# 2. DEADWOOD CALCULATIONS --------------------------------------------
# 2.1. changes in stocks per ha --------------------------------------------
DW_stock_changes_P <-
BZE3_DW_summary %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_BZE3")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m)) %>%
left_join(., HBI_DW_summary %>%
#filter(plot_ID != "all" & SP_code == "all" & stand == "all") %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_HBI")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm,  mean_l_m, sd_l_m)),
by = c("stand_component", "plot_ID", "dw_sp", "dw_type", "ST_LY_type", "decay", "compartiment")) %>%
# if there are plots/ species or stands that were not established in HBI and thus do not have stocks
# or if there are plots/ species or stands that are not present in BZE3 anymore but have stocks in HBI
# we have to set their stock per ha to 0 to make sure the calculations can also track "negative growth"
mutate(across(contains("t_ha"), ~ifelse(is.na(.x), 0, .x)) )%>%
# for n_ha and n_dw_TY, n_dec we do the same but as these values were calculated only for the whole plot we
# apply the correction only to rows witch plot_ID != all, but decay, dw_type and species  == "all"
mutate(across(contains("n_ha") | contains("n_dec") | contains("n_dw_TY") , ~ifelse(is.na(.x) &
plot_ID != "all"&
dw_sp == "all" &
dw_type == "all" &
decay == "all" , 0, .x)) ) %>%
# this is to replace NA for missing average values. Average values were calcualted for the following groups:
# everything != "all" excecpt decay == "all"
# everything ! = "all" except dw_type == "all"
# Everything != "all" except dw_sp == "all"
# https://stackoverflow.com/questions/69560076/r-applying-condition-across-multiple-columns-ignoring-na
# !!! this doensnt work
# mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & if_any(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~ . %in% "all"),
# count the "all"s that occure and select only rows where it appears 2 times
#0, .x)) ) %>%
# # https://stackoverflow.com/questions/24015557/count-occurrences-of-value-in-a-set-of-variables-in-r-per-row
mutate(all_count = apply(plot_ID:decay), 1, function(x) length(which(x=="all")))) %>%
# 2. DEADWOOD CALCULATIONS --------------------------------------------
# 2.1. changes in stocks per ha --------------------------------------------
DW_stock_changes_P <-
BZE3_DW_summary %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_BZE3")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m)) %>%
left_join(., HBI_DW_summary %>%
#filter(plot_ID != "all" & SP_code == "all" & stand == "all") %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_HBI")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm,  mean_l_m, sd_l_m)),
by = c("stand_component", "plot_ID", "dw_sp", "dw_type", "ST_LY_type", "decay", "compartiment")) %>%
# if there are plots/ species or stands that were not established in HBI and thus do not have stocks
# or if there are plots/ species or stands that are not present in BZE3 anymore but have stocks in HBI
# we have to set their stock per ha to 0 to make sure the calculations can also track "negative growth"
mutate(across(contains("t_ha"), ~ifelse(is.na(.x), 0, .x)) )%>%
# for n_ha and n_dw_TY, n_dec we do the same but as these values were calculated only for the whole plot we
# apply the correction only to rows witch plot_ID != all, but decay, dw_type and species  == "all"
mutate(across(contains("n_ha") | contains("n_dec") | contains("n_dw_TY") , ~ifelse(is.na(.x) &
plot_ID != "all"&
dw_sp == "all" &
dw_type == "all" &
decay == "all" , 0, .x)) ) %>%
# this is to replace NA for missing average values. Average values were calcualted for the following groups:
# everything != "all" excecpt decay == "all"
# everything ! = "all" except dw_type == "all"
# Everything != "all" except dw_sp == "all"
# https://stackoverflow.com/questions/69560076/r-applying-condition-across-multiple-columns-ignoring-na
# !!! this doensnt work
# mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & if_any(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~ . %in% "all"),
# count the "all"s that occure and select only rows where it appears 2 times
#0, .x)) ) %>%
# # https://stackoverflow.com/questions/24015557/count-occurrences-of-value-in-a-set-of-variables-in-r-per-row
mutate(all_count = apply(plot_ID:decay), 1, function(x) length(which(x=="all"))) %>%
mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & (apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all"))) >= 2) == T,
0, .x)) ) %>%
# # mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & across(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~`==`(.x, x)),
# #                                                           0, .x)) ) %>%
arrange(plot_ID, dw_sp, dw_type, ST_LY_type, decay)
# 2. DEADWOOD CALCULATIONS --------------------------------------------
# 2.1. changes in stocks per ha --------------------------------------------
DW_stock_changes_P <-
BZE3_DW_summary %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_BZE3")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m)) %>%
left_join(., HBI_DW_summary %>%
#filter(plot_ID != "all" & SP_code == "all" & stand == "all") %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_HBI")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm,  mean_l_m, sd_l_m)),
by = c("stand_component", "plot_ID", "dw_sp", "dw_type", "ST_LY_type", "decay", "compartiment")) %>%
# if there are plots/ species or stands that were not established in HBI and thus do not have stocks
# or if there are plots/ species or stands that are not present in BZE3 anymore but have stocks in HBI
# we have to set their stock per ha to 0 to make sure the calculations can also track "negative growth"
mutate(across(contains("t_ha"), ~ifelse(is.na(.x), 0, .x)) )%>%
# for n_ha and n_dw_TY, n_dec we do the same but as these values were calculated only for the whole plot we
# apply the correction only to rows witch plot_ID != all, but decay, dw_type and species  == "all"
mutate(across(contains("n_ha") | contains("n_dec") | contains("n_dw_TY") , ~ifelse(is.na(.x) &
plot_ID != "all"&
dw_sp == "all" &
dw_type == "all" &
decay == "all" , 0, .x)) ) %>%
# this is to replace NA for missing average values. Average values were calcualted for the following groups:
# everything != "all" excecpt decay == "all"
# everything ! = "all" except dw_type == "all"
# Everything != "all" except dw_sp == "all"
# https://stackoverflow.com/questions/69560076/r-applying-condition-across-multiple-columns-ignoring-na
# !!! this doensnt work
# mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & if_any(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~ . %in% "all"),
# count the "all"s that occure and select only rows where it appears 2 times
#0, .x)) ) %>%
# # https://stackoverflow.com/questions/24015557/count-occurrences-of-value-in-a-set-of-variables-in-r-per-row
mutate(all_count = apply(plot_ID:decay, 1, function(x) length(which(x=="all")))) %>%
mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & (apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all"))) >= 2) == T,
0, .x)) ) %>%
# # mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & across(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~`==`(.x, x)),
# #                                                           0, .x)) ) %>%
arrange(plot_ID, dw_sp, dw_type, ST_LY_type, decay)
# 2. DEADWOOD CALCULATIONS --------------------------------------------
# 2.1. changes in stocks per ha --------------------------------------------
DW_stock_changes_P <-
BZE3_DW_summary %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_BZE3")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m)) %>%
left_join(., HBI_DW_summary %>%
#filter(plot_ID != "all" & SP_code == "all" & stand == "all") %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_HBI")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm,  mean_l_m, sd_l_m)),
by = c("stand_component", "plot_ID", "dw_sp", "dw_type", "ST_LY_type", "decay", "compartiment")) %>%
# if there are plots/ species or stands that were not established in HBI and thus do not have stocks
# or if there are plots/ species or stands that are not present in BZE3 anymore but have stocks in HBI
# we have to set their stock per ha to 0 to make sure the calculations can also track "negative growth"
mutate(across(contains("t_ha"), ~ifelse(is.na(.x), 0, .x)) )%>%
# for n_ha and n_dw_TY, n_dec we do the same but as these values were calculated only for the whole plot we
# apply the correction only to rows witch plot_ID != all, but decay, dw_type and species  == "all"
mutate(across(contains("n_ha") | contains("n_dec") | contains("n_dw_TY") , ~ifelse(is.na(.x) &
plot_ID != "all"&
dw_sp == "all" &
dw_type == "all" &
decay == "all" , 0, .x)) ) %>%
# this is to replace NA for missing average values. Average values were calcualted for the following groups:
# everything != "all" excecpt decay == "all"
# everything ! = "all" except dw_type == "all"
# Everything != "all" except dw_sp == "all"
# https://stackoverflow.com/questions/69560076/r-applying-condition-across-multiple-columns-ignoring-na
# !!! this doensnt work
# mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & if_any(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~ . %in% "all"),
# count the "all"s that occure and select only rows where it appears 2 times
#0, .x)) ) %>%
# # https://stackoverflow.com/questions/24015557/count-occurrences-of-value-in-a-set-of-variables-in-r-per-row
mutate(all_count = apply(., plot_ID:decay, 1, function(x) length(which(x=="all")))) %>%
mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & (apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all"))) >= 2) == T,
0, .x)) ) %>%
# # mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & across(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~`==`(.x, x)),
# #                                                           0, .x)) ) %>%
arrange(plot_ID, dw_sp, dw_type, ST_LY_type, decay)
# 2. DEADWOOD CALCULATIONS --------------------------------------------
# 2.1. changes in stocks per ha --------------------------------------------
DW_stock_changes_P <-
BZE3_DW_summary %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_BZE3")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m)) %>%
left_join(., HBI_DW_summary %>%
#filter(plot_ID != "all" & SP_code == "all" & stand == "all") %>%
select(stand_component, plot_ID, dw_sp, dw_type, ST_LY_type, decay,
compartiment, B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm, mean_l_m, sd_l_m) %>%
# https://rstats101.com/add-prefix-or-suffix-to-column-names-of-dataframe-in-r/
rename_with(.fn = function(.x){paste0(.x,"_HBI")},
.cols= c(B_t_ha, C_t_ha, N_t_ha, n_ha, n_dec, n_dw_TY, mean_d_cm, sd_d_cm,  mean_l_m, sd_l_m)),
by = c("stand_component", "plot_ID", "dw_sp", "dw_type", "ST_LY_type", "decay", "compartiment")) %>%
# if there are plots/ species or stands that were not established in HBI and thus do not have stocks
# or if there are plots/ species or stands that are not present in BZE3 anymore but have stocks in HBI
# we have to set their stock per ha to 0 to make sure the calculations can also track "negative growth"
mutate(across(contains("t_ha"), ~ifelse(is.na(.x), 0, .x)) )%>%
# for n_ha and n_dw_TY, n_dec we do the same but as these values were calculated only for the whole plot we
# apply the correction only to rows witch plot_ID != all, but decay, dw_type and species  == "all"
mutate(across(contains("n_ha") | contains("n_dec") | contains("n_dw_TY") , ~ifelse(is.na(.x) &
plot_ID != "all"&
dw_sp == "all" &
dw_type == "all" &
decay == "all" , 0, .x)) )# %>%
DW_stock_changes_P <-
DW_stock_changes_P %>%
# # https://stackoverflow.com/questions/24015557/count-occurrences-of-value-in-a-set-of-variables-in-r-per-row
mutate(all_count = apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all"))) >= 2) %>%
mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & (apply(DW_stock_changes_P[, c("plot_ID",
"dw_sp",
"dw_type",
"decay" )], 1, function(x) length(which(x=="all"))) >= 2) == T,
0, .x)) ) %>%
# # mutate(across(contains("mean") | contains("sd") , ~ifelse(is.na(.x) & across(c("plot_ID", "dw_sp", "dw_type", "decay", "compartiment", "ST_LY_type" ), ~`==`(.x, x)),
# #                                                           0, .x)) ) %>%
arrange(plot_ID, dw_sp, dw_type, ST_LY_type, decay)

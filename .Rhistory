"foliage" = f_bio_kg,
"stem" = stem_bio_kg)
}
Poorter_rg_RSR_RLR <- function(ag, spec, compartiment){ # instead of the species I have to put NH_LH here
# equation to transform aboveground into belowground biomass : stem:root-ratio
# quadratische ergänzung der Funktion: stem = a + b1*root + b2*root^2
# sten = b2*root^2 + b1*root + a
# stem = a*root^2 + b*root + c
# 0 = a*root^2 + b*root + c-y
# c = c-y
# (-b-sqrt(b^2-4*a*c))/2*a = x1
# (-b + sqrt(b^2-4*a*c))/2*a = x1
# https://www.mathepanik.de/Klassen/Klasse_10/Lektion_Kl_10_L_parabeln_gleichung_loesen.php
c <- c(NB = -0.070, LB = -0.097);   # a
b <- c(NB = 1.236, LB = 1.071);     # b1
a <- c(NB = -0.0186, LB = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
ag_g <- ag*1000;
# withdraw y from c to create a function that equals to 0 so we apply the quadratic function
cy <- c[spec]-log10(ag_g);
# calculate two possible results for the biomass at the given y
log.bg.x1 = (-b[spec]-sqrt(b[spec]^2-4*a[spec]*cy))/(2*a[spec]);
log.bg.x2 = (-b[spec]+sqrt(b[spec]^2-4*a[spec]*cy))/(2*a[spec]);
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
bg.kg.x1 = (10^log.bg.x1)/1000
bg.kg.x2 = (10^log.bg.x2)/1000
# if x1 is lower then zero while x2 is higher then zero but below the stem mass choose x2, if not choose x1
bg_bio_kg = ifelse(bg.kg.x1 < 0 & bg.kg.x2 > 0 & bg.kg.x2 < ag, bg.kg.x2, bg.kg.x1)
# equation to transform belowground into foliage biomass : leaf:root-ratio
bg_g <- bg_bio_kg*1000;             # 10-log of belowground biomass in g (*1000)
a1 <- c(NB = 0.243, LB =  0.090);
b1 <- c(NB =  0.924, LB =  0.889);
b2 <- c(NB = -0.0282, LB = -0.0254);
log.10.f_bio <- a1[spec]+ b1[spec]* log10(bg_g)+ b2[spec]*log10(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
f_bio_kg <- (10^log.10.f_bio)/1000;
# equation to transform root into stem biomass
a3 <- c(NB = -0.070, LB = -0.097);   # a
b3 <- c(NB = 1.236, LB = 1.071);     # b1
b4 <- c(NB = -0.0186, LB = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
log.10.stem_bio <- a3[spec]+ b3[spec]*log10(bg_g) + b4[spec]*log10(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
stem_bio_kg <- (10^log.10.stem_bio)/1000;
switch(compartiment,
"bg" = bg_bio_kg,
"foliage" = f_bio_kg,
"stem" = stem_bio_kg)
}
poorter.bio.ag.bg.kg.RG.below.1 <- vector("list", length = nrow(HBI.RG.below.1))
for (i in 1:nrow(HBI.RG.below.1)) {
# i = 1
# basic tree info
# select one tree ID and plot ID for each individual tree per plot and sampling circuit
my.plot.id <- HBI.RG.below.1[,"plot_ID"][i]
my.ccs.id <- HBI.RG.below.1[,"CCS_no"][i]
my.tree.id <- HBI.RG.below.1[,"tree_ID"][i]
# select varibales for aboveground functions & calcualte aboveground biomass as input for Poorter
# nationla greenhousegas inventory function for trees below 1.3m
spp_LHNH = unique(HBI.RG.below.1$LH_NH[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])
h.m = as.numeric(unique(HBI.RG.below.1$H_cm[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))/100
ag_GHGI = as.data.frame(GHGI_aB_Hb1.3(spp_LHNH, h.m))[1,]
# Wolff et al. function for aboveground biomass for trees below 1m
spp = unique(HBI.RG.below.1$RG_Wolff_bio[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])
h.cm = as.numeric(unique(HBI.RG.below.1$H_cm[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))
whd.cm = as.numeric(h.to.whd(h.cm, spp))
ag_WOLFF = as.data.frame(wolff.bio.below.1m(whd.cm, h.cm, spp, compartiment = "ag"))[1,]
# calculate biomass per compartiment
poorter_B_kg_tree <- as.data.frame(cbind(
"bio_method" = c(rep("poorter", times = 4)),
"compartiment" = c("sw+fw", "ndl", "ag", "bg"),
"B_kg_tree" = c(as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "stem"))[1,],
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,],
ag_GHGI,
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "bg"))[1,]
)))
wolff_B_kg_tree <- as.data.frame(cbind(
"bio_method" = c(rep("wolff + poorter", times = 4)),
"compartiment" = c("sw+fw", "ndl", "ag", "bg"),
"B_kg_tree" = c(as.data.frame(Poorter_rg_RSR_RLR(as.numeric(ag_WOLFF), spp_LHNH, compartiment = "stem"))[1,],
as.data.frame(Poorter_rg_RSR_RLR(as.numeric(ag_WOLFF), spp_LHNH, compartiment = "foliage"))[1,],
as.numeric(ag_WOLFF),
as.data.frame(Poorter_rg_RSR_RLR(as.numeric(ag_WOLFF), spp_LHNH, compartiment = "bg"))[1,]
)))
B_kg_tree <-  rbind(poorter_B_kg_tree, wolff_B_kg_tree)
bio.info.df <- as.data.frame(cbind(
"plot_ID" = c(rep(as.integer(my.plot.id), times = nrow(B_kg_tree))),
"CCS_no" = c(rep(as.integer(my.ccs.id), times = nrow(B_kg_tree))),
"tree_ID" = c(rep(as.integer(my.tree.id), times = nrow(B_kg_tree))),
"inv" = c(rep(unique(HBI.RG.below.1$inv[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]), times = nrow(B_kg_tree))),
"inv_year" = c(rep(as.integer(unique(HBI.RG.below.1$inv_year[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])), times = nrow(B_kg_tree))),
"compartiment" = c(B_kg_tree$compartiment),
"B_kg_tree" = c(as.numeric(B_kg_tree$B_kg_tree)),
"bio_method" = c(B_kg_tree$bio_method)
)
)
poorter.bio.ag.bg.kg.RG.below.1[[i]] <- bio.info.df
}
poorter.bio.ag.bg.kg.RG.below.1.df <- as.data.frame(rbindlist(poorter.bio.ag.bg.kg.RG.below.1))
poorter.bio.ag.bg.kg.RG.below.1.df <- as.data.frame(rbindlist(poorter.bio.ag.bg.kg.RG.below.1))
poorter.bio.ag.bg.kg.RG.below.1.df
Poorter_rg_RSR_RLR <- function(ag, spec, compartiment){ # instead of the species I have to put NH_LH here
# equation to transform aboveground into belowground biomass : stem:root-ratio
# quadratische ergänzung der Funktion: stem = a + b1*root + b2*root^2
# sten = b2*root^2 + b1*root + a
# stem = a*root^2 + b*root + c
# 0 = a*root^2 + b*root + c-y
# c = c-y
# (-b-sqrt(b^2-4*a*c))/2*a = x1
# (-b + sqrt(b^2-4*a*c))/2*a = x1
# https://www.mathepanik.de/Klassen/Klasse_10/Lektion_Kl_10_L_parabeln_gleichung_loesen.php
c <- c(NB = -0.070, LB = -0.097);   # a
b <- c(NB = 1.236, LB = 1.071);     # b1
a <- c(NB = -0.0186, LB = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
ag_g <- ag*1000;
# withdraw y from c to create a function that equals to 0 so we apply the quadratic function
cy <- c[spec]-log10(ag_g);
# calculate two possible results for the biomass at the given y
log.bg.x1 = (-b[spec]-sqrt(b[spec]^2-4*a[spec]*cy))/(2*a[spec]);
log.bg.x2 = (-b[spec]+sqrt(b[spec]^2-4*a[spec]*cy))/(2*a[spec]);
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
bg.kg.x1 = (10^log.bg.x1)/1000
bg.kg.x2 = (10^log.bg.x2)/1000
# if x1 is lower then zero while x2 is higher then zero but below the stem mass choose x2, if not choose x1
bg_bio_kg = ifelse(bg.kg.x1 <= bg.kg.x2, bg.kg.x2, bg.kg.x1)
# equation to transform belowground into foliage biomass : leaf:root-ratio
bg_g <- bg_bio_kg*1000;             # 10-log of belowground biomass in g (*1000)
a1 <- c(NB = 0.243, LB =  0.090);
b1 <- c(NB =  0.924, LB =  0.889);
b2 <- c(NB = -0.0282, LB = -0.0254);
log.10.f_bio <- a1[spec]+ b1[spec]* log10(bg_g)+ b2[spec]*log10(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
f_bio_kg <- (10^log.10.f_bio)/1000;
# equation to transform root into stem biomass
a3 <- c(NB = -0.070, LB = -0.097);   # a
b3 <- c(NB = 1.236, LB = 1.071);     # b1
b4 <- c(NB = -0.0186, LB = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
log.10.stem_bio <- a3[spec]+ b3[spec]*log10(bg_g) + b4[spec]*log10(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
stem_bio_kg <- (10^log.10.stem_bio)/1000;
switch(compartiment,
"bg" = bg_bio_kg,
"foliage" = f_bio_kg,
"stem" = stem_bio_kg)
}
poorter.bio.ag.bg.kg.RG.below.1 <- vector("list", length = nrow(HBI.RG.below.1))
for (i in 1:nrow(HBI.RG.below.1)) {
# i = 1
# basic tree info
# select one tree ID and plot ID for each individual tree per plot and sampling circuit
my.plot.id <- HBI.RG.below.1[,"plot_ID"][i]
my.ccs.id <- HBI.RG.below.1[,"CCS_no"][i]
my.tree.id <- HBI.RG.below.1[,"tree_ID"][i]
# select varibales for aboveground functions & calcualte aboveground biomass as input for Poorter
# nationla greenhousegas inventory function for trees below 1.3m
spp_LHNH = unique(HBI.RG.below.1$LH_NH[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])
h.m = as.numeric(unique(HBI.RG.below.1$H_cm[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))/100
ag_GHGI = as.data.frame(GHGI_aB_Hb1.3(spp_LHNH, h.m))[1,]
# Wolff et al. function for aboveground biomass for trees below 1m
spp = unique(HBI.RG.below.1$RG_Wolff_bio[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])
h.cm = as.numeric(unique(HBI.RG.below.1$H_cm[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))
whd.cm = as.numeric(h.to.whd(h.cm, spp))
ag_WOLFF = as.data.frame(wolff.bio.below.1m(whd.cm, h.cm, spp, compartiment = "ag"))[1,]
# calculate biomass per compartiment
poorter_B_kg_tree <- as.data.frame(cbind(
"bio_method" = c(rep("poorter", times = 4)),
"compartiment" = c("sw+fw", "ndl", "ag", "bg"),
"B_kg_tree" = c(as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "stem"))[1,],
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,],
ag_GHGI,
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "bg"))[1,]
)))
wolff_B_kg_tree <- as.data.frame(cbind(
"bio_method" = c(rep("wolff + poorter", times = 4)),
"compartiment" = c("sw+fw", "ndl", "ag", "bg"),
"B_kg_tree" = c(as.data.frame(Poorter_rg_RSR_RLR(as.numeric(ag_WOLFF), spp_LHNH, compartiment = "stem"))[1,],
as.data.frame(Poorter_rg_RSR_RLR(as.numeric(ag_WOLFF), spp_LHNH, compartiment = "foliage"))[1,],
as.numeric(ag_WOLFF),
as.data.frame(Poorter_rg_RSR_RLR(as.numeric(ag_WOLFF), spp_LHNH, compartiment = "bg"))[1,]
)))
B_kg_tree <-  rbind(poorter_B_kg_tree, wolff_B_kg_tree)
bio.info.df <- as.data.frame(cbind(
"plot_ID" = c(rep(as.integer(my.plot.id), times = nrow(B_kg_tree))),
"CCS_no" = c(rep(as.integer(my.ccs.id), times = nrow(B_kg_tree))),
"tree_ID" = c(rep(as.integer(my.tree.id), times = nrow(B_kg_tree))),
"inv" = c(rep(unique(HBI.RG.below.1$inv[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]), times = nrow(B_kg_tree))),
"inv_year" = c(rep(as.integer(unique(HBI.RG.below.1$inv_year[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])), times = nrow(B_kg_tree))),
"compartiment" = c(B_kg_tree$compartiment),
"B_kg_tree" = c(as.numeric(B_kg_tree$B_kg_tree)),
"bio_method" = c(B_kg_tree$bio_method)
)
)
poorter.bio.ag.bg.kg.RG.below.1[[i]] <- bio.info.df
}
poorter.bio.ag.bg.kg.RG.below.1.df <- as.data.frame(rbindlist(poorter.bio.ag.bg.kg.RG.below.1))
poorter.bio.ag.bg.kg.RG.below.1.df
for (i in 1:nrow(unique(poorter.bio.ag.bg.kg.RG.below.1.df [,c("plot_ID", "CCS_no", "tree_ID")]))){
# i=1
my.plot.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"plot_ID"][i]
my.ccs.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"CCS_no"][i]
my.tree.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"tree_ID"][i]
print(ggplot()+
geom_bar(data = (poorter.bio.ag.bg.kg.RG.below.1.df %>% filter(bio_method == "wolff + poorter") %>%
filter(tree_ID == my.tree.id, plot_ID == my.plot.id, CCS_no == my.ccs.id)) ,
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = compartiment),
stat="identity", position = "dodge")+
ggtitle(paste0(my.plot.id, ",", my.ccs.id,",", my.tree.id)))
}
for (i in 1:nrow(unique(poorter.bio.ag.bg.kg.RG.below.1.df [,c("plot_ID", "CCS_no", "tree_ID")]))){
# i=1
my.plot.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"plot_ID"][i]
my.ccs.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"CCS_no"][i]
my.tree.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"tree_ID"][i]
print(ggplot()+
geom_bar(data = (poorter.bio.ag.bg.kg.RG.below.1.df %>% filter(bio_method == "poorter") %>%
filter(tree_ID == my.tree.id, plot_ID == my.plot.id, CCS_no == my.ccs.id)) ,
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = compartiment),
stat="identity", position = "dodge")+
ggtitle(paste0(my.plot.id, ",", my.ccs.id,",", my.tree.id)))
}
Poorter_rg_RSR_RLR <- function(ag, spec, compartiment){ # instead of the species I have to put NH_LH here
# equation to transform aboveground into belowground biomass : stem:root-ratio
# quadratische ergänzung der Funktion: stem = a + b1*root + b2*root^2
# sten = b2*root^2 + b1*root + a
# stem = a*root^2 + b*root + c
# 0 = a*root^2 + b*root + c-y
# c = c-y
# (-b-sqrt(b^2-4*a*c))/2*a = x1
# (-b + sqrt(b^2-4*a*c))/2*a = x1
# https://www.mathepanik.de/Klassen/Klasse_10/Lektion_Kl_10_L_parabeln_gleichung_loesen.php
c <- c(NB = -0.070, LB = -0.097);   # a
b <- c(NB = 1.236, LB = 1.071);     # b1
a <- c(NB = -0.0186, LB = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
ag_g <- ag*1000;
# withdraw y from c to create a function that equals to 0 so we apply the quadratic function
cy <- c[spec]-log10(ag_g);
# calculate two possible results for the biomass at the given y
log.bg.x1 = (-b[spec]-sqrt(b[spec]^2-4*a[spec]*cy))/(2*a[spec]);
log.bg.x2 = (-b[spec]+sqrt(b[spec]^2-4*a[spec]*cy))/(2*a[spec]);
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
bg.kg.x1 = (10^log.bg.x1)/1000
bg.kg.x2 = (10^log.bg.x2)/1000
# if x1 is lower then zero while x2 is higher then zero but below the stem mass choose x2, if not choose x1
bg_bio_kg = ifelse(bg.kg.x1 <= 0 | bg.kg.x1 <= bg.kg.x2, bg.kg.x2,
ifelse(bg.kg.x1 >= 0 | bg.kg.x1 > bg.kg.x2, bg.kg.x1, NA))
# equation to transform belowground into foliage biomass : leaf:root-ratio
bg_g <- bg_bio_kg*1000;             # 10-log of belowground biomass in g (*1000)
a1 <- c(NB = 0.243, LB =  0.090);
b1 <- c(NB =  0.924, LB =  0.889);
b2 <- c(NB = -0.0282, LB = -0.0254);
log.10.f_bio <- a1[spec]+ b1[spec]* log10(bg_g)+ b2[spec]*log10(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
f_bio_kg <- (10^log.10.f_bio)/1000;
# equation to transform root into stem biomass
a3 <- c(NB = -0.070, LB = -0.097);   # a
b3 <- c(NB = 1.236, LB = 1.071);     # b1
b4 <- c(NB = -0.0186, LB = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
log.10.stem_bio <- a3[spec]+ b3[spec]*log10(bg_g) + b4[spec]*log10(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
stem_bio_kg <- (10^log.10.stem_bio)/1000;
switch(compartiment,
"bg" = bg_bio_kg,
"foliage" = f_bio_kg,
"stem" = stem_bio_kg)
}
poorter.bio.ag.bg.kg.RG.below.1 <- vector("list", length = nrow(HBI.RG.below.1))
for (i in 1:nrow(HBI.RG.below.1)) {
# i = 1
# basic tree info
# select one tree ID and plot ID for each individual tree per plot and sampling circuit
my.plot.id <- HBI.RG.below.1[,"plot_ID"][i]
my.ccs.id <- HBI.RG.below.1[,"CCS_no"][i]
my.tree.id <- HBI.RG.below.1[,"tree_ID"][i]
# select varibales for aboveground functions & calcualte aboveground biomass as input for Poorter
# nationla greenhousegas inventory function for trees below 1.3m
spp_LHNH = unique(HBI.RG.below.1$LH_NH[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])
h.m = as.numeric(unique(HBI.RG.below.1$H_cm[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))/100
ag_GHGI = as.data.frame(GHGI_aB_Hb1.3(spp_LHNH, h.m))[1,]
# Wolff et al. function for aboveground biomass for trees below 1m
spp = unique(HBI.RG.below.1$RG_Wolff_bio[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])
h.cm = as.numeric(unique(HBI.RG.below.1$H_cm[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))
whd.cm = as.numeric(h.to.whd(h.cm, spp))
ag_WOLFF = as.data.frame(wolff.bio.below.1m(whd.cm, h.cm, spp, compartiment = "ag"))[1,]
# calculate biomass per compartiment
poorter_B_kg_tree <- as.data.frame(cbind(
"bio_method" = c(rep("poorter", times = 4)),
"compartiment" = c("sw+fw", "ndl", "ag", "bg"),
"B_kg_tree" = c(as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "stem"))[1,],
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,],
ag_GHGI,
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "bg"))[1,]
)))
wolff_B_kg_tree <- as.data.frame(cbind(
"bio_method" = c(rep("wolff + poorter", times = 4)),
"compartiment" = c("sw+fw", "ndl", "ag", "bg"),
"B_kg_tree" = c(as.data.frame(Poorter_rg_RSR_RLR(as.numeric(ag_WOLFF), spp_LHNH, compartiment = "stem"))[1,],
as.data.frame(Poorter_rg_RSR_RLR(as.numeric(ag_WOLFF), spp_LHNH, compartiment = "foliage"))[1,],
as.numeric(ag_WOLFF),
as.data.frame(Poorter_rg_RSR_RLR(as.numeric(ag_WOLFF), spp_LHNH, compartiment = "bg"))[1,]
)))
B_kg_tree <-  rbind(poorter_B_kg_tree, wolff_B_kg_tree)
bio.info.df <- as.data.frame(cbind(
"plot_ID" = c(rep(as.integer(my.plot.id), times = nrow(B_kg_tree))),
"CCS_no" = c(rep(as.integer(my.ccs.id), times = nrow(B_kg_tree))),
"tree_ID" = c(rep(as.integer(my.tree.id), times = nrow(B_kg_tree))),
"inv" = c(rep(unique(HBI.RG.below.1$inv[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]), times = nrow(B_kg_tree))),
"inv_year" = c(rep(as.integer(unique(HBI.RG.below.1$inv_year[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])), times = nrow(B_kg_tree))),
"compartiment" = c(B_kg_tree$compartiment),
"B_kg_tree" = c(as.numeric(B_kg_tree$B_kg_tree)),
"bio_method" = c(B_kg_tree$bio_method)
)
)
poorter.bio.ag.bg.kg.RG.below.1[[i]] <- bio.info.df
}
poorter.bio.ag.bg.kg.RG.below.1.df <- as.data.frame(rbindlist(poorter.bio.ag.bg.kg.RG.below.1))
for (i in 1:nrow(unique(poorter.bio.ag.bg.kg.RG.below.1.df [,c("plot_ID", "CCS_no", "tree_ID")]))){
# i=1
my.plot.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"plot_ID"][i]
my.ccs.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"CCS_no"][i]
my.tree.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"tree_ID"][i]
print(ggplot()+
geom_bar(data = (poorter.bio.ag.bg.kg.RG.below.1.df %>% filter(bio_method == "poorter") %>%
filter(tree_ID == my.tree.id, plot_ID == my.plot.id, CCS_no == my.ccs.id)) ,
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = compartiment),
stat="identity", position = "dodge")+
ggtitle(paste0(my.plot.id, ",", my.ccs.id,",", my.tree.id)))
}
Poorter_rg_RSR_RLR <- function(ag, spec, compartiment){ # instead of the species I have to put NH_LH here
# equation to transform aboveground into belowground biomass : stem:root-ratio
# quadratische ergänzung der Funktion: stem = a + b1*root + b2*root^2
# sten = b2*root^2 + b1*root + a
# stem = a*root^2 + b*root + c
# 0 = a*root^2 + b*root + c-y
# c = c-y
# (-b-sqrt(b^2-4*a*c))/2*a = x1
# (-b + sqrt(b^2-4*a*c))/2*a = x1
# https://www.mathepanik.de/Klassen/Klasse_10/Lektion_Kl_10_L_parabeln_gleichung_loesen.php
c <- c(NB = -0.070, LB = -0.097);   # a
b <- c(NB = 1.236, LB = 1.071);     # b1
a <- c(NB = -0.0186, LB = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
ag_g <- ag*1000;
# withdraw y from c to create a function that equals to 0 so we apply the quadratic function
cy <- c[spec]-log10(ag_g);
# calculate two possible results for the biomass at the given y
log.bg.x1 = (-b[spec]-sqrt(b[spec]^2-4*a[spec]*cy))/(2*a[spec]);
log.bg.x2 = (-b[spec]+sqrt(b[spec]^2-4*a[spec]*cy))/(2*a[spec]);
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
bg.kg.x1 = (10^log.bg.x1)/1000
bg.kg.x2 = (10^log.bg.x2)/1000
# if x1 is lower then zero while x2 is higher then zero but below the stem mass choose x2, if not choose x1
bg_bio_kg = ifelse(bg.kg.x1 <= 0 & bg.kg.x2 <= ag | bg.kg.x1 <= bg.kg.x2 & bg.kg.x2 <= ag, bg.kg.x2,
ifelse(bg.kg.x1 >= 0 & bg.kg.x1 <= ag | bg.kg.x1 > bg.kg.x2 & bg.kg.x1 <= ag, bg.kg.x1, NA))
# equation to transform belowground into foliage biomass : leaf:root-ratio
bg_g <- bg_bio_kg*1000;             # 10-log of belowground biomass in g (*1000)
a1 <- c(NB = 0.243, LB =  0.090);
b1 <- c(NB =  0.924, LB =  0.889);
b2 <- c(NB = -0.0282, LB = -0.0254);
log.10.f_bio <- a1[spec]+ b1[spec]* log10(bg_g)+ b2[spec]*log10(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
f_bio_kg <- (10^log.10.f_bio)/1000;
# equation to transform root into stem biomass
a3 <- c(NB = -0.070, LB = -0.097);   # a
b3 <- c(NB = 1.236, LB = 1.071);     # b1
b4 <- c(NB = -0.0186, LB = 0.01794); # b2
# 10-log of belowground biomass in g (*1000)
log.10.stem_bio <- a3[spec]+ b3[spec]*log10(bg_g) + b4[spec]*log10(bg_g)^2;
# a) backtranform  logarithm: https://studyflix.de/mathematik/logarithmus-aufloesen-4573
# log_a(b) = c ---> b = a^c
# b) transform leaf biomass in g into kg by dividing by 1000
stem_bio_kg <- (10^log.10.stem_bio)/1000;
switch(compartiment,
"bg" = bg_bio_kg,
"foliage" = f_bio_kg,
"stem" = stem_bio_kg)
}
poorter.bio.ag.bg.kg.RG.below.1 <- vector("list", length = nrow(HBI.RG.below.1))
for (i in 1:nrow(HBI.RG.below.1)) {
# i = 1
# basic tree info
# select one tree ID and plot ID for each individual tree per plot and sampling circuit
my.plot.id <- HBI.RG.below.1[,"plot_ID"][i]
my.ccs.id <- HBI.RG.below.1[,"CCS_no"][i]
my.tree.id <- HBI.RG.below.1[,"tree_ID"][i]
# select varibales for aboveground functions & calcualte aboveground biomass as input for Poorter
# nationla greenhousegas inventory function for trees below 1.3m
spp_LHNH = unique(HBI.RG.below.1$LH_NH[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])
h.m = as.numeric(unique(HBI.RG.below.1$H_cm[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))/100
ag_GHGI = as.data.frame(GHGI_aB_Hb1.3(spp_LHNH, h.m))[1,]
# Wolff et al. function for aboveground biomass for trees below 1m
spp = unique(HBI.RG.below.1$RG_Wolff_bio[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])
h.cm = as.numeric(unique(HBI.RG.below.1$H_cm[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]))
whd.cm = as.numeric(h.to.whd(h.cm, spp))
ag_WOLFF = as.data.frame(wolff.bio.below.1m(whd.cm, h.cm, spp, compartiment = "ag"))[1,]
# calculate biomass per compartiment
poorter_B_kg_tree <- as.data.frame(cbind(
"bio_method" = c(rep("poorter", times = 4)),
"compartiment" = c("sw+fw", "ndl", "ag", "bg"),
"B_kg_tree" = c(as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "stem"))[1,],
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "foliage"))[1,],
ag_GHGI,
as.data.frame(Poorter_rg_RSR_RLR(ag_GHGI, spp_LHNH, compartiment = "bg"))[1,]
)))
wolff_B_kg_tree <- as.data.frame(cbind(
"bio_method" = c(rep("wolff + poorter", times = 4)),
"compartiment" = c("sw+fw", "ndl", "ag", "bg"),
"B_kg_tree" = c(as.data.frame(Poorter_rg_RSR_RLR(as.numeric(ag_WOLFF), spp_LHNH, compartiment = "stem"))[1,],
as.data.frame(Poorter_rg_RSR_RLR(as.numeric(ag_WOLFF), spp_LHNH, compartiment = "foliage"))[1,],
as.numeric(ag_WOLFF),
as.data.frame(Poorter_rg_RSR_RLR(as.numeric(ag_WOLFF), spp_LHNH, compartiment = "bg"))[1,]
)))
B_kg_tree <-  rbind(poorter_B_kg_tree, wolff_B_kg_tree)
bio.info.df <- as.data.frame(cbind(
"plot_ID" = c(rep(as.integer(my.plot.id), times = nrow(B_kg_tree))),
"CCS_no" = c(rep(as.integer(my.ccs.id), times = nrow(B_kg_tree))),
"tree_ID" = c(rep(as.integer(my.tree.id), times = nrow(B_kg_tree))),
"inv" = c(rep(unique(HBI.RG.below.1$inv[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id]), times = nrow(B_kg_tree))),
"inv_year" = c(rep(as.integer(unique(HBI.RG.below.1$inv_year[HBI.RG.below.1$plot_ID==my.plot.id & HBI.RG.below.1$tree_ID==my.tree.id & HBI.RG.below.1$CCS_no==my.ccs.id])), times = nrow(B_kg_tree))),
"compartiment" = c(B_kg_tree$compartiment),
"B_kg_tree" = c(as.numeric(B_kg_tree$B_kg_tree)),
"bio_method" = c(B_kg_tree$bio_method)
)
)
poorter.bio.ag.bg.kg.RG.below.1[[i]] <- bio.info.df
}
poorter.bio.ag.bg.kg.RG.below.1.df <- as.data.frame(rbindlist(poorter.bio.ag.bg.kg.RG.below.1))
for (i in 1:nrow(unique(poorter.bio.ag.bg.kg.RG.below.1.df [,c("plot_ID", "CCS_no", "tree_ID")]))){
# i=1
my.plot.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"plot_ID"][i]
my.ccs.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"CCS_no"][i]
my.tree.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"tree_ID"][i]
print(ggplot()+
geom_bar(data = (poorter.bio.ag.bg.kg.RG.below.1.df %>% filter(bio_method == "poorter") %>%
filter(tree_ID == my.tree.id, plot_ID == my.plot.id, CCS_no == my.ccs.id)) ,
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = compartiment),
stat="identity", position = "dodge")+
ggtitle(paste0(my.plot.id, ",", my.ccs.id,",", my.tree.id)))
}
for (i in 1:nrow(unique(poorter.bio.ag.bg.kg.RG.below.1.df [,c("plot_ID", "CCS_no", "tree_ID")]))){
# i=1
my.plot.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"plot_ID"][i]
my.ccs.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"CCS_no"][i]
my.tree.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"tree_ID"][i]
print(ggplot()+
geom_bar(data = (poorter.bio.ag.bg.kg.RG.below.1.df %>% filter(bio_method == "wolff + poorter") %>%
filter(tree_ID == my.tree.id, plot_ID == my.plot.id, CCS_no == my.ccs.id)) ,
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = compartiment),
stat="identity", position = "dodge")+
ggtitle(paste0(my.plot.id, ",", my.ccs.id,",", my.tree.id)))
}
i=1
my.plot.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"plot_ID"][i]
my.ccs.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"CCS_no"][i]
my.tree.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"tree_ID"][i]
print(ggplot()+
geom_bar(data = (poorter.bio.ag.bg.kg.RG.below.1.df %>% filter(bio_method == "wolff + poorter") %>%
filter(tree_ID == my.tree.id, plot_ID == my.plot.id, CCS_no == my.ccs.id)) ,
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = compartiment),
stat="identity", position = "dodge")+
geom_bar(data = (poorter.bio.ag.bg.kg.RG.below.1.df %>% filter(bio_method == "poorter") %>%
filter(tree_ID == my.tree.id, plot_ID == my.plot.id, CCS_no == my.ccs.id)) ,
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = compartiment),
stat="identity", position = "dodge")+
ggtitle(paste0(my.plot.id, ",", my.ccs.id,",", my.tree.id)))
i=1
my.plot.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"plot_ID"][i]
my.ccs.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"CCS_no"][i]
my.tree.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"tree_ID"][i]
print(ggplot()+
geom_bar(data = (poorter.bio.ag.bg.kg.RG.below.1.df %>% #filter(bio_method == "wolff + poorter") %>%
filter(tree_ID == my.tree.id, plot_ID == my.plot.id, CCS_no == my.ccs.id)) ,
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method),
stat="identity", position = "dodge")+
ggtitle(paste0(my.plot.id, ",", my.ccs.id,",", my.tree.id)))
for (i in 1:nrow(unique(poorter.bio.ag.bg.kg.RG.below.1.df [,c("plot_ID", "CCS_no", "tree_ID")]))){
# i=1
my.plot.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"plot_ID"][i]
my.ccs.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"CCS_no"][i]
my.tree.id <- unique(poorter.bio.ag.bg.kg.RG.below.1.df[, c("plot_ID", "CCS_no", "tree_ID")])[,"tree_ID"][i]
print(ggplot()+
geom_bar(data = (poorter.bio.ag.bg.kg.RG.below.1.df %>% #filter(bio_method == "wolff + poorter") %>%
filter(tree_ID == my.tree.id, plot_ID == my.plot.id, CCS_no == my.ccs.id)) ,
aes(x = compartiment, y = as.numeric(B_kg_tree), fill = bio_method),
stat="identity", position = "dodge")+
ggtitle(paste0(my.plot.id, ",", my.ccs.id,",", my.tree.id)))
}

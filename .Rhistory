table_names <- c("b2beab", "neu_x_ld", "neu_k_tangenz", "x_bart_neu", "tit_1", "be", "beab", "be_waldraender",
"bej", "bejb", "bedw", "bedw_liste", "punkt", "HBI_location")
here("data/input/")
here("data/input/BZE2_HBI")
paste0(here("data/input/BZE2_HBI"), "/", my.table.name, ".csv")
# i = 1
# get table name
my.table.name <- table_names[i]
# 0.SETUP --------------------------------------------------------------------------------------------------------------------
# 0.1. packages and functions -------------------------------------------------------------------------------------------------
source(paste0(getwd(), "/scripts/01_00_functions_library.R"))
# 1.1. establish connection with database via R ---------------------------
# https://stackoverflow.com/questions/18580066/how-to-allow-remote-access-to-postgresql-database
# https://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html
# https://www.postgresql.org/docs/9.1/auth-pg-hba-conf.html
con <- dbConnect(RPostgres::Postgres())
#  1.2. PostgreSQL credentials --------------------------------------------------
# import credentials
con_df <- read.delim(file = paste0(here("data/input/general"), "/connection_SQL.csv"), sep = ";", dec = ",")
# assign conenctioni credentials
# name of database
db <- con_df$db[1]
# host of database: thuenen server --> VPN proably need to be activated
host_db <- con_df$host_db[1]
# database port or any other port specified by the DBA
db_port <- con_df$db_port[1]
# database username
db_user <- con_df$db_user[1]
# database password
db_password <- con_df$db_password[1]
# estabish connection
con <- dbConnect(RPostgres::Postgres(), dbname = db, host=host_db, port=db_port, user=db_user, password=db_password)
## datasets import from postgres databank
# !!!!!!!!!!!!!! ENTER YOUR CREDENTIAL HERE !!!!!!!!!!!!!!!!!!!!!!!!!!
# database username
db_user <- 'hgercken'
# database password
db_password <- 'Ao1ieDahthaheoPh'
# create database credentals dataset
con_df <- as.data.frame(cbind(
# name of database
db = 'bze2'  #provide the name of your db
# host of database: thuenen server --> VPN proably need to be activated
,host_db = '134.110.100.88'   # i.e. 'ec2-54-83-201-96.compute-1.amazonaws.com'
# database port or any other port specified by the DBA
,db_port = '5432'  # this info you can find in the PGadmin properties of the server
# database username
,db_user = db_user  # 'henriette.gercken@thuenen.de'
# database password
,db_password = db_password # 'Jette$Thuenen_2024'
))
# write connection daataframe to sun conenction with database script
write.csv(con_df, paste0(here("data/input/general"), "/connection_SQL.csv"))
# 1.1. establish connection with database via R ---------------------------
# https://stackoverflow.com/questions/18580066/how-to-allow-remote-access-to-postgresql-database
# https://www.cyberciti.biz/tips/postgres-allow-remote-access-tcp-connection.html
# https://www.postgresql.org/docs/9.1/auth-pg-hba-conf.html
con <- dbConnect(RPostgres::Postgres())
#  1.2. PostgreSQL credentials --------------------------------------------------
# import credentials
con_df <- read.delim(file = paste0(here("data/input/general"), "/connection_SQL.csv"), sep = ";", dec = ",")
# assign conenctioni credentials
# name of database
db <- con_df$db[1]
# host of database: thuenen server --> VPN proably need to be activated
host_db <- con_df$host_db[1]
# database port or any other port specified by the DBA
db_port <- con_df$db_port[1]
# database username
db_user <- con_df$db_user[1]
# database password
db_password <- con_df$db_password[1]
# estabish connection
con <- dbConnect(RPostgres::Postgres(), dbname = db, host=host_db, port=db_port, user=db_user, password=db_password)
con_df$db_password[1]
con_df
#  1.2. PostgreSQL credentials --------------------------------------------------
# import credentials
con_df <- read.delim(file = paste0(here("data/input/general"), "/connection_SQL.csv"), sep = ",", dec = ",")
con_df
# assign conenctioni credentials
# name of database
db <- con_df$db[1]
# host of database: thuenen server --> VPN proably need to be activated
host_db <- con_df$host_db[1]
# database port or any other port specified by the DBA
db_port <- con_df$db_port[1]
# database username
db_user <- con_df$db_user[1]
# database password
db_password <- con_df$db_password[1]
# estabish connection
con <- dbConnect(RPostgres::Postgres(), dbname = db, host=host_db, port=db_port, user=db_user, password=db_password)
# https://stackoverflow.com/questions/15520361/permission-denied-for-relation-in-postgresql
res <- dbSendQuery(con, "SELECT * FROM bze2_bestock.b2beab;")
dbFetch(res)
dbClearResult(res)
table_names <- c("b2beab", "neu_x_ld", "neu_k_tangenz", "x_bart_neu", "tit_1", "be", "beab", "be_waldraender",
"bej", "bejb", "bedw", "bedw_liste", "punkt", "HBI_location")
i = 1
# i = 1
# get table name
my.table.name <- table_names[i]
my.table.name
# get table from dataframe
df <- dbGetQuery(con, paste0("SELECT * FROM bze2_bestock.", my.table.name))
df
# name dataframe
write.csv2(df,  paste0(here("data/raw/BZE3"), "/", my.table.name, ".csv"))
df
paste0(here("data/raw/BZE3"), "/", my.table.name, ".csv")
# name dataframe
write.csv2(df,  paste0(here("data/raw/BZE2_HBI"), "/", my.table.name, ".csv"))
here("data/raw/BZE2_HBI")
file.copy(from = here("data/raw/BZE2_HBI"),
to = here("data/input/BZE2_HBI"),
overwrite = TRUE)
here("data/raw/BZE2_HBI")
i = 1
# get table name
my.table.name <- table_names[i]
# get table from dataframe
df <- dbGetQuery(con, paste0("SELECT * FROM bze2_bestock.", my.table.name))
# name dataframe
write.csv2(df,  paste0(here("data/raw/BZE2_HBI"), "/", my.table.name, ".csv"))
file.copy(from = here("data/raw/BZE2_HBI"),
to = here("data/input/BZE2_HBI"),
overwrite = TRUE)
paste(here("data/raw/BZE2_HBI")
paste0(here("data/raw/BZE2_HBI"))
paste0(here("data/raw/BZE2_HBI"))
raw.path.bze <- paste0(here("data/raw/BZE2_HBI"), "/")
raw.path.bze
raw.path.bze2 <- paste0(here("data/raw/BZE2_HBI"), "/")
!(my.table.name %in% c("neu_x_ld", "neu_k_tangenz", "x_bart_neu", "HBI_location"))
db
con
con_df$db
con_df$db <- 'bze2'
con_df
# set db connection
con <- dbConnect(RPostgres::Postgres(), dbname = con_df$db, host=host_db, port=db_port, user=db_user, password=db_password)
con
# get table from database and transform into dataframe
df <- dbGetQuery(con, paste0("SELECT * FROM",  my.schema.name,".", my.table.name))
# set schema name
my.schema.name <- "data"
# set database name
con_df$db <- 'bze2'
# set db connection
con <- dbConnect(RPostgres::Postgres(), dbname = con_df$db, host=host_db, port=db_port, user=db_user, password=db_password)
# get table from database and transform into dataframe
df <- dbGetQuery(con, paste0("SELECT * FROM",  my.schema.name,".", my.table.name))
paste("SELECT * FROM",  my.schema.name,".", my.table.name)
paste0("SELECT * FROM",  my.schema.name,".", my.table.name)
# set schema name
my.schema.name <- "bze2_bestock"
# set database name
con_df$db <- 'bze2'
# set db connection
con <- dbConnect(RPostgres::Postgres(), dbname = con_df$db, host=host_db, port=db_port, user=db_user, password=db_password)
paste0("SELECT * FROM"," ", my.schema.name,".", my.table.name)
# get table from database and transform into dataframe
df <- dbGetQuery(con, paste0("SELECT * FROM"," ", my.schema.name,".", my.table.name))
# name dataframe
write.csv2(df, paste0(here("data/input/BZE3"), "/", my.table.name, ".csv"))
# save everything imported from database from raw folder to input folder
# 1. create raw data path:
raw.path.bze2 <- paste0(here("data/raw/BZE2_HBI"), "/")
raw.path.bze2
# 2. get names of all files in the momok outout folder: https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/list.files
bze2.in.files <- list.files(raw.path.bze2)
bze2.in.files
# 3. create input path
input.path.bze2 <- paste0(here("data/input/BZE2_HBI"), "/")
input.path.bze2
# copy the files from one filder to the other: https://statisticsglobe.com/move-files-between-folders-r
file.copy(from = paste0(raw.path.bze2, bze2.in.files),
to = paste0(input.path.bze2, bze2.in.files)
overwrite = TRUE)
# copy the files from one filder to the other: https://statisticsglobe.com/move-files-between-folders-r
file.copy(from = paste0(raw.path.bze2, bze2.in.files),
to = paste0(input.path.bze2, bze2.in.files),
overwrite = TRUE)
paste0(here("data/raw/general"), "/", my.table.name, ".csv")
# HBI BE dataset: this dataset contains the inventory data of the tree inventory accompanying the second national soil inventory
trees_data <- read.delim(file = here("data/input/BZE3/beab.csv"), sep = ",", dec = ",")
# ----- 0.1. packages and functions --------------------------------------------
source(paste0(getwd(), "/scripts/01_00_functions_library.R"))
# ----- 0.2. working directory -------------------------------------------------
here::here()
out.path.BZE3 <- ("output/out_data/out_data_BZE/")
# ----- 0.4 importing data -----------------------------------------------------
## BZE 2
# this dataset contains the BZE file tit_1 which displays info about the BZE inventory in general
# so info thatÂ´s base of all sub inventories like trees, deadwood, regeneration
inv_info <- read.delim(file = here("data/input/BZE3/tit_1.csv"), sep = ",", dec = ",", stringsAsFactors=FALSE) %>% select(-c("re_form", "re_lage", "neigung", "exposition", "anmerkung"))
colnames(inv_info) <- c("plot_ID", "team", "date", "plot_inv_status")
# create column that just contains year of inventory: https://www.geeksforgeeks.org/how-to-extract-year-from-date-in-r/
inv_info$date <- as.Date(inv_info$date)
# HBI BE dataset: this dataset contains the inventory data of the tree inventory accompanying the second national soil inventory
trees_data <- read.delim(file = here("data/input/BZE2_HBI/beab.csv"), sep = ",", dec = ",")
colnames(trees_data)
